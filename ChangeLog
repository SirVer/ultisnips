	- Support for ${VISUAL}. *UltiSnips-visual-placeholder*
	- Improved handling of utf-8 characters in files and snippet definitions.
	- Full support for :py3. UltiSnips now truly works with python >= 2.6.

version 1.6:
  - Significant speed improvements and a few bugs fixed.
  - Better handling of non ASCII chars in snippets by assuming UTF-8 encoding
    when no other information is available.
  - Contributions for UltiSnips are now also accepted on GitHub: https://github.com/SirVer/ultisnips/
  - New or improved snippets: ruby, rails, xhtml

version 1.5:
  - Some critical bug fixes for new vim versions.
  - New or improved snippets: tex, texmath, python, jinja2, go, puppet, xhtml
  - Configuration of search path for snippets *UltiSnips-snippet-search-path* 
  - New parser implementation: A little faster, more flexible and less bugged.

version 1.4:
  - New or improved snippets: php, html, djangohtml, mako, lua 
  - Snippets are now listed alphabetically by their trigger, no longer in
    order of appearance
  - Snippet files are now automatically reloaded when they change.
  - Support for other directory names for snippets beside
    "UltiSnips" *UltiSnips-snippet-search-path*
  - Errors are now shown in a scratch window.
  - Now fully supports Windows with python >= 2.6. UltiSnips should now work
    on all systems that Vim runs on.
  - a syntax file was added for snippets files with nice highlighting.
  - snippets definition files now have the filetype 'snippets'. It used to be
    'snippet'.

version 1.3:
  - Erlang snippets (g0rdin)
  - Other VimScripts can now define and immediately expand anonymous snippets
    ( *UltiSnips_Anon* ) (Ryan Wooden)
  - Other VimScripts can now define new snippets via a function
    ( *UltiSnips_AddSnippet* ) (Ryan Wooden)
  - New Snippets for eruby and rails (Ches Martin).
  - A new Option 't' has been added to snippets that avoid expanding tabstops.
    Be also more consistent with how indenting is handled. (Ryan Wooden)
  - Added a ftplugin script for .snippets files. Syntax highlighting still
    missing. (Rupa Deadwyler)
  - Added UltiSnipsReset and UltiSnipsEdit (Idea by JCEB)

version 1.2:
  - many bugs were fixed
  - smode mappings for printable characters are now removed before expanding a
    snippet. This is configurable. *UltiSnips-warning-smappings*
  - all shipped snippets are now fully compatible with UltiSnips
  - added support for global snippets which enhance python interpolation even
    more *UltiSnips-globals*
  - added support for multi word and regular expression triggers. Very
    powerful in combination with python interpolation.
  - Python interpolation became much more powerful *UltiSnips-python* 
  - added support for clearsnippets command *UltiSnips-clearing-snippets*
  - added support for option w which is a little more strict than i.
  - added support for listing of valid triggers. Defaults to <c-tab>.
  - added support for option i (inword expansion)
  - extends keyword is now supported on the first line of snippet files. This makes it easy to
    define special cases, for example cpp extends c: a cpp trigger is useless
    in c, but a c trigger is valuable for cpp. 
  - UltiSnips now adheres to expandtab and tabstop options of vim

version 1.1:
  - Made triggers configurable. You can also use the same trigger for
    expanding and tabbing. The TextMate configuration <tab> and <s-tab> is now
    possible.
  - Conditional Inserts can now be nested
  - Added support for b option. This only considers a snippet at the beginning
    of a line ( *UltiSnips-adding-snippets* )
  - Added support for ! option. This overwrites previously defined snippets
    with the same tab trigger ( *UltiSnips-adding-snippets* )
  - Support for dotted filetype syntax. Now snippets for more than one filetype
    can be active ( *UltiSnips-adding-snippets* )

