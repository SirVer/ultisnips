!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARR_D	test/constant.py	/^ARR_D = '\\x1bOB'$/;"	v
ARR_L	test/constant.py	/^ARR_L = '\\x1bOD'$/;"	v
ARR_R	test/constant.py	/^ARR_R = '\\x1bOC'$/;"	v
ARR_U	test/constant.py	/^ARR_U = '\\x1bOA'$/;"	v
ASE_IMAGE	Makefile	/^	docker build -t ultisnips:repro --build-arg BASE_IMAGE=$< -f Dockerfile.repro .$/;"	m
AddFunc_Opt	test/test_UltiSnipFunc.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	test/test_UltiSnipFunc.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
AddNewSnippetSource	test/test_UltiSnipFunc.py	/^class AddNewSnippetSource(_VimTest):$/;"	c
AddedSnippetsSource	pythonx/UltiSnips/snippet/source/added.py	/^class AddedSnippetsSource(SnippetSource):$/;"	c
Anon_NoTrigger_AfterSpace	test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	test/test_AnonymousExpansion.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	test/test_AnonymousExpansion.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	test/test_AnonymousExpansion.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	test/test_AnonymousExpansion.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
Autocommands	test/test_Autocommands.py	/^class Autocommands(_VimTest):$/;"	c
Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne	test/test_Autotrigger.py	/^class Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne(_VimTest):$/;"	c
Autotrigger_CanMatchContext	test/test_Autotrigger.py	/^class Autotrigger_CanMatchContext(_VimTest):$/;"	c
Autotrigger_CanMatchPreviouslySelectedPlaceholder	test/test_Autotrigger.py	/^class Autotrigger_CanMatchPreviouslySelectedPlaceholder(_VimTest):$/;"	c
Autotrigger_CanMatchSimpleTrigger	test/test_Autotrigger.py	/^class Autotrigger_CanMatchSimpleTrigger(_VimTest):$/;"	c
Autotrigger_WillProduceNoExceptionWithVimLowerThan214	test/test_Autotrigger.py	/^class Autotrigger_WillProduceNoExceptionWithVimLowerThan214(_VimTest):$/;"	c
BRACES	test/vim_interface.py	/^    BRACES = re.compile('([}{])')$/;"	v	class:VimInterfaceWindows
BS	test/constant.py	/^BS = '\\x7f'$/;"	v
Backspace_TabStop_NotZero	test/test_Editing.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	test/test_Editing.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
Bug1251994	test/test_Fixes.py	/^class Bug1251994(_VimTest):$/;"	c
CHECK	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
CHECK	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\$\\d+')$/;"	v	class:MirrorToken
CHECK	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\${\\d+[:}]')$/;"	v	class:TabStopToken
CHECK	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\${\\d+\\\/')$/;"	v	class:TransformationToken
CHECK	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^`!p\\s')$/;"	v	class:PythonCodeToken
CHECK	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^`!v\\s')$/;"	v	class:VimLCodeToken
COMPLETION_OPTIONS	test/test_Completion.py	/^COMPLETION_OPTIONS = 'completion1\\ncompletion2\\n'$/;"	v
COMPL_ACCEPT	test/constant.py	/^COMPL_ACCEPT = chr(25)$/;"	v
COMPL_KW	test/constant.py	/^COMPL_KW = chr(24) + chr(14)$/;"	v
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	test/test_Completion.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	test/test_Completion.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	test/test_Completion.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
ContextSnippets_ContextHasAccessToVisual	test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToVisual(_VimTest):$/;"	c
ContextSnippets_ContextIsClearedBeforeExpand	test/test_ContextSnippets.py	/^class ContextSnippets_ContextIsClearedBeforeExpand(_VimTest):$/;"	c
ContextSnippets_CursorIsZeroBased	test/test_ContextSnippets.py	/^class ContextSnippets_CursorIsZeroBased(_VimTest):$/;"	c
ContextSnippets_DoNotExpandOnFalse	test/test_ContextSnippets.py	/^class ContextSnippets_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_ExpandOnTrue	test/test_ContextSnippets.py	/^class ContextSnippets_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_Header_DoNotExpandOnFalse	test/test_ContextSnippets.py	/^class ContextSnippets_Header_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_Header_ExpandOnTrue	test/test_ContextSnippets.py	/^class ContextSnippets_Header_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_PriorityKeyword	test/test_ContextSnippets.py	/^class ContextSnippets_PriorityKeyword(_VimTest):$/;"	c
ContextSnippets_ReportError	test/test_ContextSnippets.py	/^class ContextSnippets_ReportError(_VimTest):$/;"	c
ContextSnippets_ReportErrorOnIndexOutOfRange	test/test_ContextSnippets.py	/^class ContextSnippets_ReportErrorOnIndexOutOfRange(_VimTest):$/;"	c
ContextSnippets_SimpleSnippet	test/test_ContextSnippets.py	/^class ContextSnippets_SimpleSnippet(_VimTest):$/;"	c
ContextSnippets_SnippetPriority	test/test_ContextSnippets.py	/^class ContextSnippets_SnippetPriority(_VimTest):$/;"	c
ContextSnippets_UseContext	test/test_ContextSnippets.py	/^class ContextSnippets_UseContext(_VimTest):$/;"	c
CursorMovement_BS_InEditMode	test/test_Movement.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	test/test_Movement.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
DUMP_FILENAME	pythonx/UltiSnips/debug.py	/^    else 'C:\/windows\/temp\/ultisnips.txt'$/;"	v
DeleteCurrentTabStop1_JumpBack	test/test_Editing.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	test/test_Editing.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	test/test_Editing.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	test/test_Editing.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteSnippetInsertion0	test/test_Editing.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	test/test_Editing.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
DoNotCrashOnUndoAndJumpInNestedSnippet	test/test_Editing.py	/^class DoNotCrashOnUndoAndJumpInNestedSnippet(_VimTest):$/;"	c
DoNotExpandAfterSpace_ExpectCorrectResult	test/test_Expand.py	/^class DoNotExpandAfterSpace_ExpectCorrectResult(_SimpleExpands):$/;"	c
DoNotTrimSpacesAtEndOfLinesByDefault	test/test_Chars.py	/^class DoNotTrimSpacesAtEndOfLinesByDefault(_VimTest):$/;"	c
EA	test/constant.py	/^EA = '#'  # Expand anonymous$/;"	v
ESC	test/constant.py	/^ESC = '\\x1b'$/;"	v
EX	test/constant.py	/^EX = '\\t'  # EXPAND$/;"	v
EditableTextObject	pythonx/UltiSnips/text_objects/_base.py	/^class EditableTextObject(TextObject):$/;"	c
EndOfTextToken	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class EndOfTextToken(Token):$/;"	c
EscapeCharToken	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapedChar	pythonx/UltiSnips/text_objects/_escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
ExclusiveSelection_RealWorldCase_Test	test/test_Selection.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	test/test_Selection.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
ExitSnippetModeAfterTabstopZero	test/test_Expand.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
ExpandInTheMiddleOfLine_ExpectCorrectResult	test/test_Expand.py	/^class ExpandInTheMiddleOfLine_ExpectCorrectResult(_SimpleExpands):$/;"	c
FOSimple_Break_ExpectCorrectResult	test/test_Format.py	/^class FOSimple_Break_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExpectCorrectResult	test/test_Format.py	/^class FOTextAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExpectCorrectResult	test/test_Format.py	/^class FOTextBeforeAndAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOWrapOnLongWord_ExpectCorrectResult	test/test_Format.py	/^class FOWrapOnLongWord_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FoldOverwrite_Simple_ECR	test/test_Folding.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
Fold_DeleteMiddleLine_ECR	test/test_Folding.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
FoldingEnabled_SnippetWithFold_ExpectNoFolding	test/test_Folding.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
IMMoving_AcceptInputWhenMoved_ECR	test/test_Movement.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	test/test_Movement.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	test/test_Movement.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	test/test_Movement.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	test/test_Movement.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	test/test_Movement.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	test/test_Movement.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	test/test_Movement.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	test/test_Movement.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
IndentUtil	pythonx/UltiSnips/indent_util.py	/^class IndentUtil(object):$/;"	c
JB	test/constant.py	/^JB = '+'  # Jump backwards$/;"	v
JF	test/constant.py	/^JF = '?'  # Jump forwards$/;"	v
JumpForward_DefSnippet	test/test_Editing.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
LS	test/constant.py	/^LS = '@'  # List snippets$/;"	v
LeaveTrailingWhitespace	test/test_Chars.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
LineIterator	pythonx/UltiSnips/text.py	/^class LineIterator(object):$/;"	c
ListAllAvailable_BraceInFront_ExpectCorrectResult	test/test_ListSnippets.py	/^class ListAllAvailable_BraceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExpectionShouldBeRaised	test/test_ListSnippets.py	/^class ListAllAvailable_NonDefined_NoExpectionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExpectCorrectResult	test/test_ListSnippets.py	/^class ListAllAvailable_NothingTyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExpectCorrectResult	test/test_ListSnippets.py	/^class ListAllAvailable_SpaceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult	test/test_ListSnippets.py	/^        _ListAllSnippets):$/;"	c
ListAllAvailable_testtyped_ExpectCorrectResult	test/test_ListSnippets.py	/^class ListAllAvailable_testtyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
MAKEFILE_DIR	Makefile	/^MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})$/;"	m
MAKEFILE_PATH	Makefile	/^MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
MatchIsTooCheap	pythonx/UltiSnips/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
Mirror	pythonx/UltiSnips/text_objects/_mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
MirrorBeforeTabstopLeave_ExpectCorrectResult	test/test_Mirror.py	/^class MirrorBeforeTabstopLeave_ExpectCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExpectCorrectResult	test/test_Mirror.py	/^class MirrorBeforeTabstopOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExpectCorrectResult	test/test_Mirror.py	/^class MirrorRealLifeExample_ExpectCorrectResult(_VimTest):$/;"	c
MirrorToken	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class MirrorToken(Token):$/;"	c
Mirror_TestKillTabstop_Kill	test/test_Mirror.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	test/test_Mirror.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	test/test_Mirror.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	test/test_Mirror.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	test/test_Mirror.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
MovePosition_DelSameLine	pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
MultiLine	pythonx/UltiSnips/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	test/test_Chars.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	test/test_Chars.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	test/test_Chars.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiWordSnippet_Simple	test/test_SnippetOptions.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	test/test_SnippetOptions.py	/^        _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	test/test_SnippetOptions.py	/^        _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	test/test_SnippetOptions.py	/^        _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	test/test_SnippetOptions.py	/^        _VimTest):$/;"	c
MultilineExpandTestTyping_ExpectCorrectResult	test/test_Expand.py	/^class MultilineExpandTestTyping_ExpectCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExpectCorrectResult	test/test_Expand.py	/^class MultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult	test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult	test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult	test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
Multiple_ManySnippetsOneTrigger_ECR	test/test_MultipleMatches.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	test/test_MultipleMatches.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
NoUmlautsBeforeTriggerAndCharsAfter	test/test_Chars.py	/^class NoUmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
No_Tab_Expand_ET	test/test_SnippetOptions.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	test/test_SnippetOptions.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	test/test_SnippetOptions.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld, _VimTest):$/;"	c
No_Tab_Expand_Simple	test/test_SnippetOptions.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NonUnicodeDataInUnnamedRegister	test/test_Fixes.py	/^class NonUnicodeDataInUnnamedRegister(_VimTest):$/;"	c
NoneditableTextObject	pythonx/UltiSnips/text_objects/_base.py	/^class NoneditableTextObject(TextObject):$/;"	c
OldSelection_RealWorldCase_Test	test/test_Selection.py	/^class OldSelection_RealWorldCase_Test(_OS_Base):$/;"	c
OldSelection_SimpleTabstop_Test	test/test_Selection.py	/^class OldSelection_SimpleTabstop_Test(_OS_Base):$/;"	c
ParseSnippets_ClearAll	test/test_ParseSnippets.py	/^class ParseSnippets_ClearAll(_VimTest):$/;"	c
ParseSnippets_ClearOne	test/test_ParseSnippets.py	/^class ParseSnippets_ClearOne(_VimTest):$/;"	c
ParseSnippets_ClearTwo	test/test_ParseSnippets.py	/^class ParseSnippets_ClearTwo(_VimTest):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	test/test_ParseSnippets.py	/^class ParseSnippets_ExtendsWithoutFiletype(_VimTest):$/;"	c
ParseSnippets_Global_Local_Python	test/test_ParseSnippets.py	/^class ParseSnippets_Global_Local_Python(_VimTest):$/;"	c
ParseSnippets_Global_Python	test/test_ParseSnippets.py	/^class ParseSnippets_Global_Python(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine	test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine1	test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine1(_VimTest):$/;"	c
ParseSnippets_MissingEndSnippet	test/test_ParseSnippets.py	/^class ParseSnippets_MissingEndSnippet(_VimTest):$/;"	c
ParseSnippets_MultiWord_Description	test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_NoContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_Quotes	test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Quotes(_VimTest):$/;"	c
ParseSnippets_MultiWord_RE1	test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_WithQuotes	test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_WithQuotes(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippet	test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippet(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetContext	test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetContext(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetLocation	test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetLocation(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPostAction	test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPostAction(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPreAction	test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPreAction(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktrace	test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktrace(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktraceMultiline	test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktraceMultiline(_VimTest):$/;"	c
ParseSnippets_SimpleSnippet	test/test_ParseSnippets.py	/^class ParseSnippets_SimpleSnippet(_VimTest):$/;"	c
ParseSnippets_UnknownDirective	test/test_ParseSnippets.py	/^class ParseSnippets_UnknownDirective(_VimTest):$/;"	c
PerlSyntaxFold	test/test_Folding.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
Plugin_SuperTab_SimpleTest	test/test_Plugin.py	/^class Plugin_SuperTab_SimpleTest(_VimTest):$/;"	c
Position	pythonx/UltiSnips/position.py	/^class Position(object):$/;"	c
ProperIndenting_AutoIndentAndNewline_ECR	test/test_Format.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_FirstLineInFileComplete_ECR	test/test_Format.py	/^        ProperIndenting_FirstLineInFile_ECR):$/;"	c
ProperIndenting_FirstLineInFile_ECR	test/test_Format.py	/^class ProperIndenting_FirstLineInFile_ECR(_VimTest):$/;"	c
ProperIndenting_SimpleCase_ECR	test/test_Format.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	test/test_Format.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
PythonCode	pythonx/UltiSnips/text_objects/_python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	test/test_Interpolation.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	test/test_Interpolation.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	test/test_Interpolation.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteFirst	test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_CanOverwriteTabstop	test/test_Interpolation.py	/^class PythonCode_CanOverwriteTabstop(_VimTest):$/;"	c
PythonCode_IndentEtSw	test/test_Interpolation.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	test/test_Interpolation.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	test/test_Interpolation.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	test/test_Interpolation.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	test/test_Interpolation.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	test/test_Interpolation.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	test/test_Interpolation.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	test/test_Interpolation.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	test/test_Interpolation.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	test/test_Interpolation.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	test/test_Interpolation.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	test/test_Interpolation.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	test/test_Interpolation.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	test/test_Interpolation.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	test/test_Interpolation.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	test/test_Interpolation.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	test/test_Interpolation.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	test/test_Interpolation.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	test/test_Interpolation.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	test/test_Interpolation.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonVisual_HasAccessToSelectedPlaceholders	test/test_Interpolation.py	/^class PythonVisual_HasAccessToSelectedPlaceholders(_VimTest):$/;"	c
PythonVisual_HasAccessToZeroPlaceholders	test/test_Interpolation.py	/^class PythonVisual_HasAccessToZeroPlaceholders(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	test/test_Interpolation.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	test/test_Interpolation.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	test/test_Interpolation.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
Python_WeirdScoping_Error	test/test_Interpolation.py	/^class Python_WeirdScoping_Error(_VimTest):$/;"	c
RecTabStopsWithExpandtab_SimpleExample_ECR	test/test_Format.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	test/test_Format.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	test/test_Recursive.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ChildTriggerContainsParentTextObjects	test/test_Recursive.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExpectCorrectResult	test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstop_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	test/test_Recursive.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	test/test_Recursive.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	test/test_Recursive.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	test/test_Recursive.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	test/test_Recursive.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	test/test_Recursive.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	test/test_Recursive.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult	test/test_Recursive.py	/^class RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult	test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult	test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExpectCorrectResult	test/test_Recursive.py	/^class RecTabStops_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	test/test_Recursive.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	test/test_Recursive.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	test/test_Recursive.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	test/test_Recursive.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
RemoveTrailingWhitespace	test/test_Chars.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
RetainsTheUnnamedRegister	test/test_Fixes.py	/^class RetainsTheUnnamedRegister(_VimTest):$/;"	c
RetainsTheUnnamedRegister_ButOnlyOnce	test/test_Fixes.py	/^class RetainsTheUnnamedRegister_ButOnlyOnce(_VimTest):$/;"	c
SEQUENCES	test/constant.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
SNIPMATE_SNIPPET_PRIORITY	pythonx/UltiSnips/snippet/definition/snipmate.py	/^    SNIPMATE_SNIPPET_PRIORITY = -1000$/;"	v	class:SnipMateSnippetDefinition
SelectModeMappings_BufferLocalMappings_ECR	test/test_Selection.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	test/test_Selection.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	test/test_Selection.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
ShellCode	pythonx/UltiSnips/text_objects/_shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class ShellCodeToken(Token):$/;"	c
ShiftWidthZero	test/test_Fixes.py	/^class ShiftWidthZero(_VimTest):$/;"	c
SimpleExpandEndingWithNewline_ExpectCorrectResult	test/test_Expand.py	/^class SimpleExpandEndingWithNewline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExpectCorrectResult	test/test_Expand.py	/^class SimpleExpandNewLineAndBackspae_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExpectCorrectResult	test/test_Expand.py	/^class SimpleExpandTwice_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExpectCorrectResult	test/test_Expand.py	/^class SimpleExpandTypeAfterExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExpectCorrectResult	test/test_Expand.py	/^class SimpleExpandTypeAndDelete_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_ExpectCorrectResult	test/test_Expand.py	/^class SimpleExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleMirrorDelete_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleMirrorMultilineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleMirrorSameLineManyMultiline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleMirrorSameLineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleMirrorSameLine_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleMirrorSameLine_InText_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexType_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult	test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult(_VimTest):$/;"	c
SnipMateFileSource	pythonx/UltiSnips/snippet/source/file/snipmate.py	/^class SnipMateFileSource(SnippetFileSource):$/;"	c
SnipMateSnippetDefinition	pythonx/UltiSnips/snippet/definition/snipmate.py	/^class SnipMateSnippetDefinition(SnippetDefinition):$/;"	c
SnippetActions_CanEvenWrapSnippetInPreAction	test/test_SnippetActions.py	/^class SnippetActions_CanEvenWrapSnippetInPreAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonOnPreExpand	test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonOnPreExpand(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpAction	test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected	test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetOnFirstJump	test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetOnFirstJump(_VimTest):$/;"	c
SnippetActions_CanExpandSnippetInDifferentPlace	test/test_SnippetActions.py	/^class SnippetActions_CanExpandSnippetInDifferentPlace(_VimTest):$/;"	c
SnippetActions_CanMirrorTabStopsOutsideOfSnippet	test/test_SnippetActions.py	/^class SnippetActions_CanMirrorTabStopsOutsideOfSnippet(_VimTest):$/;"	c
SnippetActions_CanModifyParentBody	test/test_SnippetActions.py	/^class SnippetActions_CanModifyParentBody(_VimTest):$/;"	c
SnippetActions_CanUseContextFromContextMatch	test/test_SnippetActions.py	/^class SnippetActions_CanUseContextFromContextMatch(_VimTest):$/;"	c
SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre	test/test_SnippetActions.py	/^class SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre(_VimTest):$/;"	c
SnippetActions_DoNotBreakCursorOnSingleLikeChange	test/test_SnippetActions.py	/^class SnippetActions_DoNotBreakCursorOnSingleLikeChange(_VimTest):$/;"	c
SnippetActions_EnsureIndent	test/test_SnippetActions.py	/^class SnippetActions_EnsureIndent(_VimTest):$/;"	c
SnippetActions_ErrorOnBufferModificationThroughCommand	test/test_SnippetActions.py	/^class SnippetActions_ErrorOnBufferModificationThroughCommand(_VimTest):$/;"	c
SnippetActions_ErrorOnModificationSnippetLine	test/test_SnippetActions.py	/^class SnippetActions_ErrorOnModificationSnippetLine(_VimTest):$/;"	c
SnippetActions_MoveParentSnippetFromChildInPreAction	test/test_SnippetActions.py	/^class SnippetActions_MoveParentSnippetFromChildInPreAction(_VimTest):$/;"	c
SnippetActions_MoveVisual	test/test_SnippetActions.py	/^class SnippetActions_MoveVisual(_VimTest):$/;"	c
SnippetActions_PostActionCanUseSnippetRange	test/test_SnippetActions.py	/^class SnippetActions_PostActionCanUseSnippetRange(_VimTest):$/;"	c
SnippetActions_PostActionModifiesBuffer	test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_PostActionModifiesCharAfterSnippet	test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesCharAfterSnippet(_VimTest):$/;"	c
SnippetActions_PostActionModifiesLineAfterSnippet	test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesLineAfterSnippet(_VimTest):$/;"	c
SnippetActions_PreActionModifiesBuffer	test/test_SnippetActions.py	/^class SnippetActions_PreActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_UseCorrectJumpActions	test/test_SnippetActions.py	/^class SnippetActions_UseCorrectJumpActions(_VimTest):$/;"	c
SnippetDefinition	pythonx/UltiSnips/snippet/definition/_base.py	/^class SnippetDefinition(object):$/;"	c
SnippetDictionary	pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^class SnippetDictionary(object):$/;"	c
SnippetFileSource	pythonx/UltiSnips/snippet/source/file/_base.py	/^class SnippetFileSource(SnippetSource):$/;"	c
SnippetInstance	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	pythonx/UltiSnips/snippet_manager.py	/^class SnippetManager(object):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	test/test_SnippetOptions.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	test/test_SnippetOptions.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	test/test_SnippetOptions.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	test/test_SnippetOptions.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	test/test_SnippetOptions.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetOptions_Regex_WithSpace	test/test_SnippetOptions.py	/^class SnippetOptions_Regex_WithSpace(_VimTest):$/;"	c
SnippetPriorities_AddedHasHigherThanFile	test/test_SnippetPriorities.py	/^class SnippetPriorities_AddedHasHigherThanFile(_VimTest):$/;"	c
SnippetPriorities_ClearedByChild	test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByChild(_VimTest):$/;"	c
SnippetPriorities_ClearedByParent	test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByParent(_VimTest):$/;"	c
SnippetPriorities_DoNotCareAboutNonMatchings	test/test_SnippetPriorities.py	/^class SnippetPriorities_DoNotCareAboutNonMatchings(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded	test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded_neg_prio	test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded_neg_prio(_VimTest):$/;"	c
SnippetPriorities_MultiWordTriggerOverwriteExisting	test/test_SnippetPriorities.py	/^class SnippetPriorities_MultiWordTriggerOverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteExisting	test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteThenChoose_ECR	test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetPriorities_OverwriteTwice_ECR	test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetPriorities_SimpleClear	test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear(_VimTest):$/;"	c
SnippetPriorities_SimpleClear2	test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear2(_VimTest):$/;"	c
SnippetSource	pythonx/UltiSnips/snippet/source/_base.py	/^class SnippetSource(object):$/;"	c
SnippetSyntaxError	pythonx/UltiSnips/snippet/source/file/_base.py	/^class SnippetSyntaxError(RuntimeError):$/;"	c
SnippetUtil	pythonx/UltiSnips/text_objects/_python_code.py	/^class SnippetUtil(object):$/;"	c
SnippetUtilForAction	pythonx/UltiSnips/text_objects/_python_code.py	/^class SnippetUtilForAction(dict):$/;"	c
Snippet_With_DoubleQuote	test/test_Chars.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	test/test_Chars.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	test/test_Chars.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	test/test_Chars.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	test/test_Chars.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	test/test_Chars.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	test/test_Chars.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	test/test_Chars.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	test/test_Chars.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
Source	rplugin/python3/deoplete/sources/ultisnips.py	/^class Source(Base):$/;"	c
TabStop	pythonx/UltiSnips/text_objects/_tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	test/test_TabStop.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	test/test_TabStop.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	test/test_TabStop.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopNavigatingInInsertModeSimple_ExpectCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopNoReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopSimpleReplaceReversed_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded1_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopSimpleReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopTestBackwardJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopTestBackwardJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopTestJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult	test/test_TabStop.py	/^        _VimTest):$/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopTestJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopTestMultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
TabStopToken	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopWithOneChar_ExpectCorrectResult	test/test_TabStop.py	/^class TabStopWithOneChar_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_AdjacentTabStopAddText_ExpectCorrectResult	test/test_TabStop.py	/^class TabStop_AdjacentTabStopAddText_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_CROnlyOnSelectedNear	test/test_TabStop.py	/^class TabStop_CROnlyOnSelectedNear(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	test/test_TabStop.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	test/test_TabStop.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	test/test_TabStop.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	test/test_TabStop.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExpectCorrectResult	test/test_TabStop.py	/^class TabStop_Exit_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet	test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE	test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	test/test_TabStop.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	test/test_TabStop.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	test/test_TabStop.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	test/test_Interpolation.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	test/test_Interpolation.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	test/test_Interpolation.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_Shell_WithUmlauts	test/test_Interpolation.py	/^class TabStop_Shell_WithUmlauts(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	test/test_TabStop.py	/^        _VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	test/test_TabStop.py	/^        _VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	test/test_TabStop.py	/^        _VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop	test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override	test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	test/test_Interpolation.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult	test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult	test/test_Mirror.py	/^        _VimTest):$/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult	test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult	test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExpectCorrectResult	test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult	test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult	test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult	test/test_Mirror.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExpectCorrectResult	test/test_Mirror.py	/^class TabstopWithMirrorManyFromAll_ExpectCorrectResult(_VimTest):$/;"	c
TempFileManager	test/vim_interface.py	/^class TempFileManager(object):$/;"	c
TestAllMatch	pythonx/UltiSnips/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestCheapDelete	pythonx/UltiSnips/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestCommonCharacters	pythonx/UltiSnips/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestCrash	pythonx/UltiSnips/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestEmptyString	pythonx/UltiSnips/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestGuessing_BackspaceOneChar	pythonx/UltiSnips/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	pythonx/UltiSnips/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	pythonx/UltiSnips/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestLangmapWithUtf8_ExpectCorrectResult	test/test_UltiSnipFunc.py	/^class TestLangmapWithUtf8_ExpectCorrectResult(_VimTest):$/;"	c
TestLotsaNewlines	pythonx/UltiSnips/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestNoSubstring	pythonx/UltiSnips/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExpectCorrectResult	test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmapWithSemi_ExpectCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExpectCorrectResult	test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmap_ExpectCorrectResult(_VimTest):$/;"	c
TestRealLife	pythonx/UltiSnips/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	pythonx/UltiSnips/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestUltiSnipsProblem	pythonx/UltiSnips/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestWithNewline	pythonx/UltiSnips/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
TextObject	pythonx/UltiSnips/text_objects/_base.py	/^class TextObject(object):$/;"	c
TextObjectTransformation	pythonx/UltiSnips/text_objects/_transformation.py	/^class TextObjectTransformation(object):$/;"	c
TextTabStopAfterMirror_ExpectCorrectResult	test/test_Mirror.py	/^class TextTabStopAfterMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExpectCorrectResult	test/test_Mirror.py	/^class TextTabStopAllSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExpectCorrectResult	test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExpectCorrectResult	test/test_Mirror.py	/^class TextTabStopSurroundMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExpectCorrectResult	test/test_Mirror.py	/^class TextTabStopTextAfterTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExpectCorrectResult	test/test_Mirror.py	/^class TextTabStopTextBeforeMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExpectCorrectResult	test/test_Mirror.py	/^class TextTabStopTextBeforeTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExpectCorrectResult	test/test_Mirror.py	/^class TextTabStopTextSurroundedTab_ExpectCorrectResult(_VimTest):$/;"	c
Token	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class Token(object):$/;"	c
TrailingNewline_TabStop_EndNL	test/test_Chars.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	test/test_Chars.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	test/test_Chars.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	test/test_Chars.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	test/test_Chars.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	test/test_Chars.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	test/test_Chars.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
Transformation	pythonx/UltiSnips/text_objects/_transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	test/test_Transformation.py	/^        _VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	test/test_Transformation.py	/^        _VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_BackreferenceTwice_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_Backreference_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_CIBothDefinedNegative_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_CIBothDefinedPositive_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	test/test_Transformation.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	test/test_Transformation.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	test/test_Transformation.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_CleverTransformLongLower_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_CleverTransformLongUpper_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExpectCorrectResult	test/test_Transformation.py	/^        _VimTest):$/;"	c
Transformation_CleverTransformUpercaseChar_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_CleverTransformUpercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	test/test_Transformation.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	test/test_Transformation.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_ConditionalInsertionSimple_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter	test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter1	test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter1(_VimTest):$/;"	c
Transformation_ConditionalWithEscapedDelimiter	test/test_Transformation.py	/^class Transformation_ConditionalWithEscapedDelimiter(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	test/test_Transformation.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	test/test_Transformation.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_LowerCaseAsciiResult	test/test_Transformation.py	/^class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	test/test_Transformation.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	test/test_Transformation.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionMultiline_ECR	test/test_Transformation.py	/^class Transformation_OptionMultiline_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	test/test_Transformation.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	test/test_Transformation.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseAsciiResult	test/test_Transformation.py	/^class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_SimpleCaseNoTransform_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFront_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExpectCorrectResult	test/test_Transformation.py	/^class Transformation_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	test/test_Transformation.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	test/test_Transformation.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	test/test_Transformation.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	test/test_Transformation.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
TrimSpacesAtEndOfLines	test/test_Chars.py	/^class TrimSpacesAtEndOfLines(_VimTest):$/;"	c
UNIDECODE_ALERT_RAISED	pythonx/UltiSnips/text_objects/_transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
UNIDECODE_IMPORTED	test/util.py	/^    UNIDECODE_IMPORTED = False$/;"	v
UNIDECODE_IMPORTED	test/util.py	/^    UNIDECODE_IMPORTED = True$/;"	v
UltiSnips#AddFiletypes	autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes)$/;"	f
UltiSnips#AddSnippetWithPriority	autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, priority)$/;"	f
UltiSnips#Anon	autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...)$/;"	f
UltiSnips#CursorMoved	autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved()$/;"	f
UltiSnips#Edit	autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...)$/;"	f
UltiSnips#ExpandSnippet	autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet()$/;"	f
UltiSnips#ExpandSnippetOrJump	autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump()$/;"	f
UltiSnips#FileTypeComplete	autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos)$/;"	f
UltiSnips#JumpBackwards	autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards()$/;"	f
UltiSnips#JumpForwards	autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards()$/;"	f
UltiSnips#LeavingBuffer	autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer()$/;"	f
UltiSnips#LeavingInsertMode	autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode()$/;"	f
UltiSnips#ListSnippets	autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets()$/;"	f
UltiSnips#RefreshSnippets	autoload/UltiSnips.vim	/^function! UltiSnips#RefreshSnippets()$/;"	f
UltiSnips#SaveLastVisualSelection	autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection() range$/;"	f
UltiSnips#SnippetsInCurrentScope	autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope(...)$/;"	f
UltiSnips#TrackChange	autoload/UltiSnips.vim	/^function! UltiSnips#TrackChange()$/;"	f
UltiSnips#map_keys#MapKeys	autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys()$/;"	f
UltiSnipsAddFiletypes	plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnipsEdit	plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnipsFileSource	pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^class UltiSnipsFileSource(SnippetFileSource):$/;"	c
UltiSnipsSnippetDefinition	pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^class UltiSnipsSnippetDefinition(SnippetDefinition):$/;"	c
UltiSnips_AutoTrigger	plugin/UltiSnips.vim	/^augroup UltiSnips_AutoTrigger$/;"	a
UltiSnips_Manager	pythonx/UltiSnips/snippet_manager.py	/^UltiSnips_Manager = SnippetManager(  # pylint:disable=invalid-name$/;"	v
UmlautsBeforeTriggerAndCharsAfter	test/test_Chars.py	/^class UmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
Undo_ChangesInPlaceholder	test/test_Editing.py	/^class Undo_ChangesInPlaceholder(_VimTest):$/;"	c
Undo_CompletelyUndoSnippet	test/test_Editing.py	/^class Undo_CompletelyUndoSnippet(_VimTest):$/;"	c
Undo_RemoveEditInTabstop	test/test_Editing.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	test/test_Editing.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime	test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime2	test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime2(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	test/test_Editing.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
UnknownVariable	utils/get_tm_snippets.py	/^class UnknownVariable(Exception):$/;"	c
UnsupportedVariableExpression	utils/get_tm_snippets.py	/^class UnsupportedVariableExpression(Exception):$/;"	c
UpdateModifiedSnippetWithoutCursorMove1	test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove1(_VimTest):$/;"	c
UpdateModifiedSnippetWithoutCursorMove2	test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove2(_VimTest):$/;"	c
VerifyVimDict1	test/test_UltiSnipFunc.py	/^class VerifyVimDict1(_VimTest):$/;"	c
VerifyVimDict2	test/test_UltiSnipFunc.py	/^class VerifyVimDict2(_VimTest):$/;"	c
VerifyVimDict3	test/test_UltiSnipFunc.py	/^class VerifyVimDict3(_VimTest):$/;"	c
VimBuffer	pythonx/UltiSnips/_vim.py	/^class VimBuffer(object):$/;"	c
VimBufferProxy	pythonx/UltiSnips/buffer_proxy.py	/^class VimBufferProxy(_vim.VimBuffer):$/;"	c
VimInterface	test/vim_interface.py	/^class VimInterface(TempFileManager):$/;"	c
VimInterfaceTmux	test/vim_interface.py	/^class VimInterfaceTmux(VimInterface):$/;"	c
VimInterfaceTmuxNeovim	test/vim_interface.py	/^class VimInterfaceTmuxNeovim(VimInterfaceTmux):$/;"	c
VimInterfaceWindows	test/vim_interface.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	pythonx/UltiSnips/text_objects/_viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimPosition	pythonx/UltiSnips/vim_state.py	/^class VimPosition(Position):$/;"	c
VimState	pythonx/UltiSnips/vim_state.py	/^class VimState(object):$/;"	c
VimTestCase	test/vim_test_case.py	/^class VimTestCase(unittest.TestCase, TempFileManager):$/;"	c
VirtualEdit	test/test_Fixes.py	/^class VirtualEdit(_VimTest):$/;"	c
Visual	pythonx/UltiSnips/text_objects/_visual.py	/^class Visual(NoneditableTextObject, TextObjectTransformation):$/;"	c
VisualContentPreserver	pythonx/UltiSnips/vim_state.py	/^class VisualContentPreserver(object):$/;"	c
VisualToken	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class VisualToken(Token):$/;"	c
VisualTransformationWithDefault_ExpandWithVisual	test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	test/test_Visual.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	test/test_Visual.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	test/test_Visual.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	test/test_Visual.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	test/test_Visual.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	test/test_Visual.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	test/test_Visual.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	test/test_Visual.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	test/test_Visual.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	test/test_Visual.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	test/test_Visual.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_DedentLine	test/test_Visual.py	/^class Visual_LineSelect_DedentLine(_VimTest):$/;"	c
Visual_LineSelect_Simple	test/test_Visual.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	test/test_Visual.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	test/test_Visual.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	test/test_Visual.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordExclusive	test/test_Visual.py	/^class Visual_SelectOneWordExclusive(_VimTest):$/;"	c
Visual_SelectOneWordInclusive	test/test_Visual.py	/^class Visual_SelectOneWordInclusive(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	test/test_Visual.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	test/test_Visual.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	test/test_Visual.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	test/test_Visual.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	test/test_Visual.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
WIN_ESCAPES	test/vim_interface.py	/^    WIN_ESCAPES = ['+', '^', '%', '~', '[', ']', '<', '>', '(', ')']$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	test/vim_interface.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
_AddFuncBase	test/test_UltiSnipFunc.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	test/test_AnonymousExpansion.py	/^class _AnonBase(_VimTest):$/;"	c
_Base	pythonx/UltiSnips/test_diff.py	/^class _Base(object):$/;"	c
_BaseGuessing	pythonx/UltiSnips/test_diff.py	/^class _BaseGuessing(object):$/;"	c
_CONDITIONAL	pythonx/UltiSnips/text_objects/_transformation.py	/^_CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v
_CleverReplace	pythonx/UltiSnips/text_objects/_transformation.py	/^class _CleverReplace(object):$/;"	c
_DOLLAR	pythonx/UltiSnips/text_objects/_transformation.py	/^_DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v
_ES_Base	test/test_Selection.py	/^class _ES_Base(_VimTest):$/;"	c
_ExpandTabs	test/test_Format.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FormatoptionsBase	test/test_Format.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_INDENT	pythonx/UltiSnips/snippet/definition/_base.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:SnippetDefinition
_LONG_CASEFOLDINGS	pythonx/UltiSnips/text_objects/_transformation.py	/^_LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v
_ListAllSnippets	test/test_ListSnippets.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MPBase	pythonx/UltiSnips/test_position.py	/^class _MPBase(object):$/;"	c
_MultiLineDefault	test/test_Chars.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	test/test_SnippetOptions.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	test/test_MultipleMatches.py	/^class _MultipleMatches(_VimTest):$/;"	c
_No_Tab_Expand	test/test_SnippetOptions.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_ONE_CHAR_CASE_SWITCH	pythonx/UltiSnips/text_objects/_transformation.py	/^_ONE_CHAR_CASE_SWITCH = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v
_OS_Base	test/test_Selection.py	/^class _OS_Base(_VimTest):$/;"	c
_ParseSnippets_MultiWord	test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord(_VimTest):$/;"	c
_ParseSnippets_MultiWord_RE	test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord_RE(_VimTest):$/;"	c
_Placeholder	pythonx/UltiSnips/vim_state.py	/^_Placeholder = namedtuple('_FrozenPlaceholder', ['current_text', 'start', 'end'])$/;"	v
_REPLACE_NON_WS	pythonx/UltiSnips/text_objects/_visual.py	/^_REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v
_Regex_Self	test/test_SnippetOptions.py	/^class _Regex_Self(_VimTest):$/;"	c
_SelectModeMappings	test/test_Selection.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SimpleExpands	test/test_Expand.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SnippetOptions_ExpandWordSnippets	test/test_SnippetOptions.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_SnippetUtilCursor	pythonx/UltiSnips/snippet/definition/_base.py	/^class _SnippetUtilCursor(object):$/;"	c
_TABS	pythonx/UltiSnips/snippet/definition/_base.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:SnippetDefinition
_TOKEN_TO_TEXTOBJECT	pythonx/UltiSnips/snippet/parsing/snipmate.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TOKEN_TO_TEXTOBJECT	pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TabExpand_RealWorld	test/test_SnippetOptions.py	/^class _TabExpand_RealWorld(object):$/;"	c
_Tabs	pythonx/UltiSnips/text_objects/_python_code.py	/^class _Tabs(object):$/;"	c
_TextIterator	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class _TextIterator(object):$/;"	c
_UNESCAPE	utils/get_tm_snippets.py	/^_UNESCAPE = re.compile(ur'&\\w+?;', re.UNICODE)$/;"	v
_UmlautsBase	test/test_Chars.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VimCursor	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VisualContent	pythonx/UltiSnips/text_objects/_python_code.py	/^_VisualContent = namedtuple('_VisualContent', ['mode', 'text'])$/;"	v
__ALLOWED_TOKENS	pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS	pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS_IN_TABSTOPS	pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS_IN_TABSTOPS = [$/;"	v
__WHITESPACE_SPLIT	pythonx/UltiSnips/snippet/definition/_base.py	/^__WHITESPACE_SPLIT = re.compile(r"\\s")$/;"	v
__add__	pythonx/UltiSnips/position.py	/^    def __add__(self, pos):$/;"	m	class:Position	file:
__add__	pythonx/UltiSnips/text_objects/_python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil	file:
__delitem__	pythonx/UltiSnips/buffer_proxy.py	/^    def __delitem__(self, key):$/;"	m	class:VimBufferProxy	file:
__eq__	pythonx/UltiSnips/position.py	/^    def __eq__(self, other):$/;"	m	class:Position	file:
__getitem__	pythonx/UltiSnips/_vim.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer	file:
__getitem__	pythonx/UltiSnips/buffer_proxy.py	/^    def __getitem__(self, key):$/;"	m	class:VimBufferProxy	file:
__getitem__	pythonx/UltiSnips/position.py	/^    def __getitem__(self, index):$/;"	m	class:Position	file:
__getitem__	pythonx/UltiSnips/snippet/definition/_base.py	/^    def __getitem__(self, index):$/;"	m	class:_SnippetUtilCursor	file:
__getitem__	pythonx/UltiSnips/text_objects/_python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs	file:
__getslice__	pythonx/UltiSnips/_vim.py	/^    def __getslice__(self, i, j):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer	file:
__getslice__	pythonx/UltiSnips/buffer_proxy.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBufferProxy	file:
__init__	pythonx/UltiSnips/buffer_proxy.py	/^    def __init__(self, snippets_stack, vstate):$/;"	m	class:VimBufferProxy
__init__	pythonx/UltiSnips/indent_util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	pythonx/UltiSnips/position.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	pythonx/UltiSnips/snippet/definition/_base.py	/^    def __init__(self, cursor):$/;"	m	class:_SnippetUtilCursor
__init__	pythonx/UltiSnips/snippet/definition/_base.py	/^    def __init__(self, priority, trigger, value, description,$/;"	m	class:SnippetDefinition
__init__	pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def __init__(self, trigger, value, description, location):$/;"	m	class:SnipMateSnippetDefinition
__init__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	pythonx/UltiSnips/snippet/source/_base.py	/^    def __init__(self):$/;"	m	class:SnippetSource
__init__	pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def __init__(self):$/;"	m	class:SnippetDictionary
__init__	pythonx/UltiSnips/snippet/source/file/_base.py	/^    def __init__(self):$/;"	m	class:SnippetFileSource
__init__	pythonx/UltiSnips/snippet/source/file/_base.py	/^    def __init__(self, filename, line_index, msg):$/;"	m	class:SnippetSyntaxError
__init__	pythonx/UltiSnips/snippet_manager.py	/^    def __init__(self, expand_trigger, forward_trigger, backward_trigger):$/;"	m	class:SnippetManager
__init__	pythonx/UltiSnips/text.py	/^    def __init__(self, text):$/;"	m	class:LineIterator
__init__	pythonx/UltiSnips/text_objects/_base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	pythonx/UltiSnips/text_objects/_base.py	/^    def __init__(self, parent, token_or_start, end=None,$/;"	m	class:TextObject
__init__	pythonx/UltiSnips/text_objects/_mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
__init__	pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, initial_indent, vmode, vtext, context, parent):$/;"	m	class:SnippetUtil
__init__	pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	pythonx/UltiSnips/text_objects/_shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, snippet, parent, initial_text,$/;"	m	class:SnippetInstance
__init__	pythonx/UltiSnips/text_objects/_tabstop.py	/^    def __init__(self, parent, token, start=None, end=None):$/;"	m	class:TabStop
__init__	pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, expression):$/;"	m	class:_CleverReplace
__init__	pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	pythonx/UltiSnips/text_objects/_viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	pythonx/UltiSnips/text_objects/_visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimPosition
__init__	pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	rplugin/python3/deoplete/sources/ultisnips.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	test/vim_interface.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	test/vim_interface.py	/^    def __init__(self, name=''):$/;"	m	class:TempFileManager
__init__	test/vim_interface.py	/^    def __init__(self, vim_executable, name):$/;"	m	class:VimInterface
__init__	test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmux
__init__	test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmuxNeovim
__init__	test/vim_test_case.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:VimTestCase
__iter__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator	file:
__iter__	pythonx/UltiSnips/text.py	/^    def __iter__(self):$/;"	m	class:LineIterator	file:
__le__	pythonx/UltiSnips/position.py	/^    def __le__(self, other):$/;"	m	class:Position	file:
__le__	pythonx/UltiSnips/text_objects/_base.py	/^    def __le__(self, other):$/;"	m	class:TextObject	file:
__len__	pythonx/UltiSnips/_vim.py	/^    def __len__(self):$/;"	m	class:VimBuffer	file:
__len__	pythonx/UltiSnips/buffer_proxy.py	/^    def __len__(self):$/;"	m	class:VimBufferProxy	file:
__len__	pythonx/UltiSnips/snippet/definition/_base.py	/^    def __len__(self):$/;"	m	class:_SnippetUtilCursor	file:
__len__	pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def __len__(self):$/;"	m	class:SnippetDictionary	file:
__lshift__	pythonx/UltiSnips/text_objects/_python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil	file:
__lt__	pythonx/UltiSnips/position.py	/^    def __lt__(self, other):$/;"	m	class:Position	file:
__lt__	pythonx/UltiSnips/text_objects/_base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject	file:
__ne__	pythonx/UltiSnips/position.py	/^    def __ne__(self, other):$/;"	m	class:Position	file:
__next__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __next__(self):$/;"	m	class:_TextIterator	file:
__next__	pythonx/UltiSnips/text.py	/^    def __next__(self):$/;"	m	class:LineIterator	file:
__repr__	pythonx/UltiSnips/position.py	/^    def __repr__(self):$/;"	m	class:Position	file:
__repr__	pythonx/UltiSnips/snippet/definition/_base.py	/^    def __repr__(self):$/;"	m	class:SnippetDefinition	file:
__repr__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken	file:
__repr__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken	file:
__repr__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken	file:
__repr__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken	file:
__repr__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken	file:
__repr__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken	file:
__repr__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken	file:
__repr__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken	file:
__repr__	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken	file:
__repr__	pythonx/UltiSnips/text_objects/_base.py	/^    def __repr__(self):$/;"	m	class:TextObject	file:
__repr__	pythonx/UltiSnips/text_objects/_tabstop.py	/^    def __repr__(self):$/;"	m	class:TabStop	file:
__rshift__	pythonx/UltiSnips/text_objects/_python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil	file:
__setitem__	pythonx/UltiSnips/_vim.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer	file:
__setitem__	pythonx/UltiSnips/buffer_proxy.py	/^    def __setitem__(self, key, value):$/;"	m	class:VimBufferProxy	file:
__setitem__	pythonx/UltiSnips/snippet/definition/_base.py	/^    def __setitem__(self, index, value):$/;"	m	class:_SnippetUtilCursor	file:
__setitem__	pythonx/UltiSnips/text_objects/_python_code.py	/^    def __setitem__(self, no, value):$/;"	m	class:_Tabs	file:
__setslice__	pythonx/UltiSnips/_vim.py	/^    def __setslice__(self, i, j, text):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer	file:
__setslice__	pythonx/UltiSnips/buffer_proxy.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBufferProxy	file:
__str__	pythonx/UltiSnips/snippet/definition/_base.py	/^    def __str__(self):$/;"	m	class:_SnippetUtilCursor	file:
__sub__	pythonx/UltiSnips/position.py	/^    def __sub__(self, pos):$/;"	m	class:Position	file:
_action_context	pythonx/UltiSnips/snippet_manager.py	/^    def _action_context(self):$/;"	m	class:SnippetManager
_add_child	pythonx/UltiSnips/text_objects/_base.py	/^    def _add_child(self, child):$/;"	m	class:EditableTextObject
_apply_change	pythonx/UltiSnips/buffer_proxy.py	/^    def _apply_change(self, change):$/;"	m	class:VimBufferProxy
_ask_snippets	pythonx/UltiSnips/snippet_manager.py	/^def _ask_snippets(snippets):$/;"	f
_ask_user	pythonx/UltiSnips/snippet_manager.py	/^def _ask_user(a, formatted):$/;"	f
_before_test	test/test_Fixes.py	/^    def _before_test(self):$/;"	m	class:NonUnicodeDataInUnnamedRegister
_before_test	test/test_Plugin.py	/^    def _before_test(self):$/;"	m	class:Plugin_SuperTab_SimpleTest
_before_test	test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	f
_before_test	test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:_AddFuncBase
_before_test	test/vim_test_case.py	/^    def _before_test(self):$/;"	m	class:VimTestCase
_calc_end	pythonx/UltiSnips/text_objects/_base.py	/^def _calc_end(text, start):$/;"	f
_check_if_still_inside_snippet	pythonx/UltiSnips/snippet_manager.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_check_version	test/vim_interface.py	/^    def _check_version(self):$/;"	m	class:VimInterfaceTmux
_child_has_moved	pythonx/UltiSnips/text_objects/_base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_chomp	pythonx/UltiSnips/text_objects/_shell_code.py	/^def _chomp(string):$/;"	f
_context_match	pythonx/UltiSnips/snippet/definition/_base.py	/^    def _context_match(self, visual_content):$/;"	m	class:SnippetDefinition
_create_file	test/vim_test_case.py	/^    def _create_file(self, file_path, content):$/;"	m	class:VimTestCase
_create_transformations	pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def _create_transformations(all_tokens, seen_ts):$/;"	f
_current_snippet	pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_cursor_moved	pythonx/UltiSnips/snippet_manager.py	/^    def _cursor_moved(self):$/;"	m	class:SnippetManager
_del_child	pythonx/UltiSnips/text_objects/_base.py	/^    def _del_child(self, child):$/;"	m	class:EditableTextObject
_disable_edits	pythonx/UltiSnips/buffer_proxy.py	/^    def _disable_edits(self):$/;"	m	class:VimBufferProxy
_do_edit	pythonx/UltiSnips/text_objects/_base.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:EditableTextObject
_do_parse	pythonx/UltiSnips/snippet/parsing/_base.py	/^    def _do_parse(parent, text, allowed_tokens):$/;"	f	function:tokenize_snippet_text
_do_print	pythonx/UltiSnips/debug.py	/^    def _do_print(text_object, indent=''):$/;"	f	function:echo_to_hierarchy
_do_snippet	pythonx/UltiSnips/snippet_manager.py	/^    def _do_snippet(self, snippet, before):$/;"	m	class:SnippetManager
_editable_children	pythonx/UltiSnips/text_objects/_base.py	/^    def _editable_children(self):$/;"	m	class:EditableTextObject
_enable_edits	pythonx/UltiSnips/buffer_proxy.py	/^    def _enable_edits(self):$/;"	m	class:VimBufferProxy
_eval_code	pythonx/UltiSnips/snippet/definition/_base.py	/^    def _eval_code(self, code, additional_locals={}):$/;"	m	class:SnippetDefinition
_execute_action	pythonx/UltiSnips/snippet/definition/_base.py	/^    def _execute_action($/;"	m	class:SnippetDefinition
_extra_vim_config	test/test_AnonymousExpansion.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_AnonBase
_extra_vim_config	test/test_Autocommands.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autocommands
_extra_vim_config	test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
_extra_vim_config	test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ShiftWidthZero
_extra_vim_config	test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VirtualEdit
_extra_vim_config	test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_extra_vim_config	test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PerlSyntaxFold
_extra_vim_config	test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_extra_vim_config	test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_extra_vim_config	test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ExpandTabs
_extra_vim_config	test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_FormatoptionsBase
_extra_vim_config	test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSw
_extra_vim_config	test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSwOffset
_extra_vim_config	test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentNoetSwTs
_extra_vim_config	test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_OptExists
_extra_vim_config	test/test_Movement.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:CursorMovement_BS_InEditMode
_extra_vim_config	test/test_Plugin.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Plugin_SuperTab_SimpleTest
_extra_vim_config	test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ES_Base
_extra_vim_config	test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_OS_Base
_extra_vim_config	test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_SelectModeMappings
_extra_vim_config	test/test_SnipMate.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:snipMate_Disabled
_extra_vim_config	test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET
_extra_vim_config	test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_extra_vim_config	test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW
_extra_vim_config	test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_extra_vim_config	test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_No_TS
_extra_vim_config	test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_RealWorld
_extra_vim_config	test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	f
_extra_vim_config	test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:AddNewSnippetSource
_extra_vim_config	test/test_Visual.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Visual_SelectOneWordExclusive
_extra_vim_config	test/vim_test_case.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VimTestCase
_file_to_edit	pythonx/UltiSnips/snippet_manager.py	/^    def _file_to_edit(self, requested_ft, bang):$/;"	m	class:SnippetManager
_find_all_snippet_directories	pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _find_all_snippet_directories():$/;"	f
_find_closing_brace	pythonx/UltiSnips/text_objects/_transformation.py	/^def _find_closing_brace(string, start_pos):$/;"	f
_find_recursive	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	function:SnippetInstance.update_textobjects
_get_all_snippet_files_for	pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnippetFileSource
_get_all_snippet_files_for	pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnipMateFileSource
_get_all_snippet_files_for	pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:UltiSnipsFileSource
_get_diff	pythonx/UltiSnips/buffer_proxy.py	/^    def _get_diff(self, start, end, new_value):$/;"	m	class:VimBufferProxy
_get_existing_deep_extends	pythonx/UltiSnips/snippet/source/_base.py	/^    def _get_existing_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
_get_file_to_edit	pythonx/UltiSnips/snippet_manager.py	/^    def _get_file_to_edit(self, snippet_dir, requested_ft, bang,$/;"	m	class:SnippetManager
_get_line_diff	pythonx/UltiSnips/buffer_proxy.py	/^    def _get_line_diff(self, line_number, before, after):$/;"	m	class:VimBufferProxy
_get_next_tab	pythonx/UltiSnips/text_objects/_base.py	/^    def _get_next_tab(self, number):$/;"	m	class:EditableTextObject
_get_pos	pythonx/UltiSnips/_vim.py	/^def _get_pos(name):$/;"	f
_get_prev_tab	pythonx/UltiSnips/text_objects/_base.py	/^    def _get_prev_tab(self, number):$/;"	m	class:EditableTextObject
_get_tabstop	pythonx/UltiSnips/text_objects/_base.py	/^    def _get_tabstop(self, requester, number):$/;"	m	class:EditableTextObject
_get_tabstop	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_text	pythonx/UltiSnips/text_objects/_mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	pythonx/UltiSnips/text_objects/_transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_get_tmp	pythonx/UltiSnips/text_objects/_shell_code.py	/^def _get_tmp():$/;"	f
_handle_failure	pythonx/UltiSnips/snippet_manager.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_handle_snippet_or_global	pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _handle_snippet_or_global($/;"	f
_is_pos_zero	pythonx/UltiSnips/_vim.py	/^def _is_pos_zero(pos):$/;"	f
_jump	pythonx/UltiSnips/snippet_manager.py	/^    def _jump(self, backwards=False):$/;"	m	class:SnippetManager
_leaving_buffer	pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_buffer(self):$/;"	m	class:SnippetManager
_leaving_insert_mode	pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_insert_mode(self):$/;"	m	class:SnippetManager
_link_file	test/vim_test_case.py	/^    def _link_file(self, source, relative_destination):$/;"	m	class:VimTestCase
_load_snippets_for	pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetFileSource
_make_debug_exception	pythonx/UltiSnips/snippet/definition/_base.py	/^    def _make_debug_exception(self, e, code=''):$/;"	m	class:SnippetDefinition
_move	pythonx/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	pythonx/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_multi_char_case_change	pythonx/UltiSnips/text_objects/_transformation.py	/^        def _multi_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_needs_update	pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetFileSource
_one_char_case_change	pythonx/UltiSnips/text_objects/_transformation.py	/^        def _one_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_parse	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:Token
_parse	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse_number	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_number(stream):$/;"	f
_parse_snippet	pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet(line, lines, filename):$/;"	f
_parse_snippet_file	pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnippetFileSource
_parse_snippet_file	pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnipMateFileSource
_parse_snippet_file	pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet_file(content, full_filename):$/;"	f
_parse_snippet_file	pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:UltiSnipsFileSource
_parse_snippets	pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _parse_snippets(self, ft, filename):$/;"	m	class:SnippetFileSource
_parse_snippets_file	pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_snippets_file	pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_till_closing_brace	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_place_initial_text	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	function:SnippetInstance.replace_initial_text
_re_match	pythonx/UltiSnips/snippet/definition/_base.py	/^    def _re_match(self, trigger):$/;"	m	class:SnippetDefinition
_refresh_snippets	pythonx/UltiSnips/snippet_manager.py	/^    def _refresh_snippets(self):$/;"	m	class:SnippetManager
_reinit	pythonx/UltiSnips/snippet_manager.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_replace_conditional	pythonx/UltiSnips/text_objects/_transformation.py	/^def _replace_conditional(match, string):$/;"	f
_replace_text	pythonx/UltiSnips/text_objects/_base.py	/^def _replace_text(buf, start, end, text):$/;"	f
_reset	pythonx/UltiSnips/text_objects/_python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_run_shell_command	pythonx/UltiSnips/text_objects/_shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_rv_changed	pythonx/UltiSnips/text_objects/_python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_save_last_visual_selection	pythonx/UltiSnips/snippet_manager.py	/^    def _save_last_visual_selection(self):$/;"	m	class:SnippetManager
_send	test/vim_interface.py	/^    def _send(self, s):$/;"	m	class:VimInterfaceTmux
_set_pos	pythonx/UltiSnips/_vim.py	/^def _set_pos(name, pos):$/;"	f
_setup_inner_state	pythonx/UltiSnips/snippet_manager.py	/^    def _setup_inner_state(self):$/;"	m	class:SnippetManager
_snip_quote	test/test_Chars.py	/^def _snip_quote(qt):$/;"	f
_snipmate_files_for	pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _snipmate_files_for(ft):$/;"	f
_snips	pythonx/UltiSnips/snippet_manager.py	/^    def _snips(self, before, partial, autotrigger_only=False):$/;"	m	class:SnippetManager
_split_conditional	pythonx/UltiSnips/text_objects/_transformation.py	/^def _split_conditional(string):$/;"	f
_splitall	pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _splitall(path):$/;"	f
_teardown_inner_state	pythonx/UltiSnips/snippet_manager.py	/^    def _teardown_inner_state(self):$/;"	m	class:SnippetManager
_track_change	pythonx/UltiSnips/snippet_manager.py	/^    def _track_change(self):$/;"	m	class:SnippetManager
_transform	pythonx/UltiSnips/text_objects/_transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_try_expand	pythonx/UltiSnips/snippet_manager.py	/^    def _try_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_unmap_select_mode_mapping	pythonx/UltiSnips/_vim.py	/^def _unmap_select_mode_mapping():$/;"	f
_update	pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done, buf):$/;"	m	class:EditableTextObject
_update	pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done, buf):$/;"	m	class:NoneditableTextObject
_update	pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done, buf):$/;"	m	class:TextObject
_update	pythonx/UltiSnips/text_objects/_mirror.py	/^    def _update(self, done, buf):$/;"	m	class:Mirror
_update	pythonx/UltiSnips/text_objects/_python_code.py	/^    def _update(self, done, buf):$/;"	m	class:PythonCode
_update	pythonx/UltiSnips/text_objects/_shell_code.py	/^    def _update(self, done, buf):$/;"	m	class:ShellCode
_update	pythonx/UltiSnips/text_objects/_viml_code.py	/^    def _update(self, done, buf):$/;"	m	class:VimLCode
_update	pythonx/UltiSnips/text_objects/_visual.py	/^    def _update(self, done, buf):$/;"	m	class:Visual
_vim_dec	pythonx/UltiSnips/compatibility.py	/^    def _vim_dec(string):$/;"	f
_vim_enc	pythonx/UltiSnips/compatibility.py	/^    def _vim_enc(bytearray):$/;"	f
_vim_enc	pythonx/UltiSnips/compatibility.py	/^    def _vim_enc(string):$/;"	f
_words_for_line	pythonx/UltiSnips/snippet/definition/_base.py	/^def _words_for_line(trigger, before, num_words=None):$/;"	f
a	pythonx/UltiSnips/test_diff.py	/^    a = 'First Line\\nSecond Line'$/;"	v	class:TestWithNewline
a	pythonx/UltiSnips/test_diff.py	/^    a = 'Vorne hallo Hinten'$/;"	v	class:TestCheapDelete
a	pythonx/UltiSnips/test_diff.py	/^    a = 'Vorne hallo Hinten'$/;"	v	class:TestRealLife1
a	pythonx/UltiSnips/test_diff.py	/^    a = 'hallo End Beginning'$/;"	v	class:TestRealLife
a	pythonx/UltiSnips/test_diff.py	/^    a = 'hi first line\\nsecond line first line\\nsecond line world'$/;"	v	class:MultiLine
a	pythonx/UltiSnips/test_diff.py	/^    a = 'stdin.h'$/;"	v	class:MatchIsTooCheap
a	pythonx/UltiSnips/test_diff.py	/^    a = 'this is it this is it this is it'$/;"	v	class:TestUltiSnipsProblem
add_buffer_filetypes	pythonx/UltiSnips/snippet_manager.py	/^    def add_buffer_filetypes(self, ft):$/;"	m	class:SnippetManager
add_snippet	pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def add_snippet(self, snippet):$/;"	m	class:SnippetDictionary
add_snippet	pythonx/UltiSnips/snippet/source/added.py	/^    def add_snippet(self, ft, snippet):$/;"	m	class:AddedSnippetsSource
add_snippet	pythonx/UltiSnips/snippet_manager.py	/^    def add_snippet(self, trigger, value, description,$/;"	m	class:SnippetManager
akey	test/test_UltiSnipFunc.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
akey	test/test_UltiSnipFunc.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
append	pythonx/UltiSnips/buffer_proxy.py	/^    def append(self, line, line_number=-1):$/;"	m	class:VimBufferProxy
args	test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
args	test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
args	test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
args	test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
args	test/test_AnonymousExpansion.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
args	test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
args	test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
args	test/test_AnonymousExpansion.py	/^    args = ''$/;"	v	class:_AnonBase
args	test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
args	test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
args	test/test_Autocommands.py	/^    args = ''$/;"	v	class:Autocommands
args	test/test_UltiSnipFunc.py	/^    args = '".*test", "simple expand", "desc", "r", "all", 0'$/;"	v	class:AddFunc_Opt
args	test/test_UltiSnipFunc.py	/^    args = '"test", "simple expand", "desc", "", "all", 0'$/;"	v	class:AddFunc_Simple
args	test/test_UltiSnipFunc.py	/^    args = ''$/;"	v	class:_AddFuncBase
as_unicode	pythonx/UltiSnips/compatibility.py	/^    def as_unicode(string):$/;"	f
as_vimencoding	pythonx/UltiSnips/compatibility.py	/^    def as_vimencoding(string):$/;"	f
b	pythonx/UltiSnips/test_diff.py	/^    b = 'Vorne Hinten'$/;"	v	class:TestCheapDelete
b	pythonx/UltiSnips/test_diff.py	/^    b = 'Vorne hallo  Hinten'$/;"	v	class:TestRealLife1
b	pythonx/UltiSnips/test_diff.py	/^    b = 'hallo End t'$/;"	v	class:TestRealLife
b	pythonx/UltiSnips/test_diff.py	/^    b = 'hi first line\\nsecond line k world'$/;"	v	class:MultiLine
b	pythonx/UltiSnips/test_diff.py	/^    b = 'n'$/;"	v	class:TestWithNewline
b	pythonx/UltiSnips/test_diff.py	/^    b = 's'$/;"	v	class:MatchIsTooCheap
b	pythonx/UltiSnips/test_diff.py	/^    b = 'this is it a this is it'$/;"	v	class:TestUltiSnipsProblem
b:current_syntax	syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:did_after_plugin_ultisnips_after	after/plugin/UltiSnips_after.vim	/^let b:did_after_plugin_ultisnips_after = 1$/;"	v
b:did_autoload_ultisnips	autoload/UltiSnips.vim	/^let b:did_autoload_ultisnips = 1$/;"	v
b:did_autoload_ultisnips_map_keys	autoload/UltiSnips/map_keys.vim	/^let b:did_autoload_ultisnips_map_keys = 1$/;"	v
b:did_ftplugin	ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:match_ignorecase	ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	ftplugin/snippets.vim	/^  let b:match_words = '^snippet\\>:^endsnippet\\>,^global\\>:^endglobal\\>,\\${:}'$/;"	v
b:ultisnips_override_snipmate	syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:undo_ftplugin	ftplugin/snippets.vim	/^let b:undo_ftplugin = "$/;"	v
basename	pythonx/UltiSnips/text_objects/_python_code.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
bindeval	pythonx/UltiSnips/_vim.py	/^def bindeval(text):$/;"	f
buf	pythonx/UltiSnips/_vim.py	/^buf = VimBuffer()  # pylint:disable=invalid-name$/;"	v
buffer	pythonx/UltiSnips/text_objects/_python_code.py	/^    def buffer(self):$/;"	m	class:SnippetUtil
buffer_maps	test/test_Selection.py	/^    buffer_maps = ('', '')$/;"	v	class:_SelectModeMappings
buffer_maps	test/test_Selection.py	/^    buffer_maps = ('H', 'blah')$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
byte2col	pythonx/UltiSnips/compatibility.py	/^    def byte2col(line, nbyte):$/;"	f
c	pythonx/UltiSnips/text_objects/_python_code.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
check_required_vim_version	test/test_Autotrigger.py	/^def check_required_vim_version(test):$/;"	f
check_required_vim_version	test/test_Editing.py	/^def check_required_vim_version(test):$/;"	f
children	pythonx/UltiSnips/text_objects/_base.py	/^    def children(self):$/;"	m	class:EditableTextObject
clear_snippets	pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def clear_snippets(self, priority, triggers):$/;"	m	class:SnippetDictionary
clear_temp	test/vim_interface.py	/^    def clear_temp(self):$/;"	m	class:TempFileManager
clone_plugin	test_all.py	/^def clone_plugin(plugin):$/;"	f
col2byte	pythonx/UltiSnips/compatibility.py	/^    def col2byte(line, col):$/;"	f
command	pythonx/UltiSnips/_vim.py	/^def command(cmd):$/;"	f
compensate_for_pum	autoload/UltiSnips.vim	/^function! s:compensate_for_pum()$/;"	f
conserve	pythonx/UltiSnips/vim_state.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
conserve_placeholder	pythonx/UltiSnips/vim_state.py	/^    def conserve_placeholder(self, placeholder):$/;"	m	class:VisualContentPreserver
context	pythonx/UltiSnips/snippet/definition/_base.py	/^    def context(self):$/;"	m	class:SnippetDefinition
context	pythonx/UltiSnips/text_objects/_python_code.py	/^    def context(self):$/;"	m	class:SnippetUtil
conv	pythonx/UltiSnips/_vim.py	/^    def conv(obj):$/;"	f	function:escape
convert_keys	test/vim_interface.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
could_match	pythonx/UltiSnips/snippet/definition/_base.py	/^    def could_match(self, before):$/;"	m	class:SnippetDefinition
create_directory	test/vim_interface.py	/^def create_directory(dirname):$/;"	f
current_text	pythonx/UltiSnips/text_objects/_base.py	/^    def current_text(self):$/;"	m	class:TextObject
cursor	pythonx/UltiSnips/_vim.py	/^    def cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	pythonx/UltiSnips/_vim.py	/^    def cursor(self, pos):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
debug	pythonx/UltiSnips/debug.py	/^def debug(msg):$/;"	f
delete_mark	pythonx/UltiSnips/_vim.py	/^def delete_mark(name):$/;"	f
delta	pythonx/UltiSnips/position.py	/^    def delta(self, pos):$/;"	m	class:Position
description	pythonx/UltiSnips/snippet/definition/_base.py	/^    def description(self):$/;"	m	class:SnippetDefinition
did_plugin_ultisnips	plugin/UltiSnips.vim	/^let did_plugin_ultisnips=1$/;"	v
diff	pythonx/UltiSnips/_diff.py	/^def diff(a, b, sline=0):$/;"	f
diff_in_buffer_length	pythonx/UltiSnips/vim_state.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
do_post_expand	pythonx/UltiSnips/snippet/definition/_base.py	/^    def do_post_expand(self, start, end, snippets_stack):$/;"	m	class:SnippetDefinition
do_post_jump	pythonx/UltiSnips/snippet/definition/_base.py	/^    def do_post_jump($/;"	m	class:SnippetDefinition
do_pre_expand	pythonx/UltiSnips/snippet/definition/_base.py	/^    def do_pre_expand(self, visual_content, snippets_stack):$/;"	m	class:SnippetDefinition
do_unmapping	test/test_Selection.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
do_unmapping	test/test_Selection.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
echo_to_hierarchy	pythonx/UltiSnips/debug.py	/^def echo_to_hierarchy(text_object):$/;"	f
end	pythonx/UltiSnips/text_objects/_base.py	/^    def end(self):$/;"	m	class:TextObject
ensure	pythonx/UltiSnips/snippet/source/_base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetSource
ensure	pythonx/UltiSnips/snippet/source/file/_base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetFileSource
escape	pythonx/UltiSnips/_vim.py	/^def escape(inp):$/;"	f
escape	pythonx/UltiSnips/text.py	/^def escape(text, chars):$/;"	f
eval	pythonx/UltiSnips/_vim.py	/^def eval(text):$/;"	f
expand	pythonx/UltiSnips/snippet_manager.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand_anon	pythonx/UltiSnips/snippet_manager.py	/^    def expand_anon($/;"	m	class:SnippetManager
expand_anon	pythonx/UltiSnips/text_objects/_python_code.py	/^    def expand_anon(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
expand_or_jump	pythonx/UltiSnips/snippet_manager.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
expected_error	test/test_ContextSnippets.py	/^    expected_error = r"IndexError: line number out of range"$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
expected_error	test/test_ContextSnippets.py	/^    expected_error = r"NameError: name 'Tru' is not defined"$/;"	v	class:ContextSnippets_ReportError
expected_error	test/test_ParseSnippets.py	/^    expected_error = " > \\s+qwe"$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
expected_error	test/test_ParseSnippets.py	/^    expected_error = " > abc"$/;"	v	class:ParseSnippets_PrintPythonStacktrace
expected_error	test/test_ParseSnippets.py	/^    expected_error = "Context: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
expected_error	test/test_ParseSnippets.py	/^    expected_error = "Defined in: .*\/all.snippets"$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
expected_error	test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: '!inv snip\/' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
expected_error	test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: 'test snip' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_NoContainer
expected_error	test/test_ParseSnippets.py	/^    expected_error = "Post-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
expected_error	test/test_ParseSnippets.py	/^    expected_error = "Pre-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
expected_error	test/test_ParseSnippets.py	/^    expected_error = "Trigger: test"$/;"	v	class:ParseSnippets_PrintErroneousSnippet
expected_error	test/test_ParseSnippets.py	/^    expected_error = r"'extends' without file types in \\S+:2"$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
expected_error	test/test_ParseSnippets.py	/^    expected_error = r"Invalid line 'unknown directive' in \\S+:2"$/;"	v	class:ParseSnippets_UnknownDirective
expected_error	test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine1
expected_error	test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '- 50' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine
expected_error	test/test_ParseSnippets.py	/^    expected_error = r"Missing 'endsnippet' for 'testsnip' in \\S+:4"$/;"	v	class:ParseSnippets_MissingEndSnippet
expected_error	test/test_SnippetActions.py	/^    expected_error = 'changes are untrackable'$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
expected_error	test/test_SnippetActions.py	/^    expected_error = 'line under the cursor was modified'$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
expected_error	test/vim_test_case.py	/^    expected_error = ''$/;"	v	class:VimTestCase
expected_python_version	test/vim_test_case.py	/^    expected_python_version = None # If set, we need to check that our Vim is running this python version.$/;"	v	class:VimTestCase
feedkeys	pythonx/UltiSnips/_vim.py	/^def feedkeys(keys, mode='n'):$/;"	f
fetch_snippets_from_dir	utils/get_tm_snippets.py	/^def fetch_snippets_from_dir(path):$/;"	f
fetch_snippets_from_svn	utils/get_tm_snippets.py	/^def fetch_snippets_from_svn(name):$/;"	f
files	test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
files	test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByChild
files	test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByParent
files	test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear
files	test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear2
files	test/vim_test_case.py	/^    files = {}$/;"	v	class:VimTestCase
filetypes	pythonx/UltiSnips/_vim.py	/^    def filetypes(self):$/;"	m	class:VimBuffer
fill_in_whitespace	pythonx/UltiSnips/text.py	/^def fill_in_whitespace(text):$/;"	f
finalize	pythonx/UltiSnips/snippet/parsing/_base.py	/^def finalize(all_tokens, seen_ts, snippet_instance):$/;"	f
find_all_snippet_files	pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_files(ft):$/;"	f
find_parent_for_new_to	pythonx/UltiSnips/text_objects/_base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
find_snippet_files	pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_snippet_files(ft, directory):$/;"	f
fixup	utils/get_tm_snippets.py	/^    def fixup(m):$/;"	f	function:unescape
flatten_test_suite	test_all.py	/^    def flatten_test_suite(suite):$/;"	f	function:setup_other_plugins
fn	pythonx/UltiSnips/text_objects/_python_code.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
focus	test/vim_interface.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
ft	pythonx/UltiSnips/text_objects/_python_code.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
g:UltiSnipsEditSplit	autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsEditSplit	docker/docker_vimrc.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsEnableSnipMate	autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEnableSnipMate = 1$/;"	v
g:UltiSnipsExpandTrigger	autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsExpandTrigger	docker/docker_vimrc.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	docker/docker_vimrc.vim	/^let g:UltiSnipsJumpBackwardTrigger="<c-z>"$/;"	v
g:UltiSnipsJumpForwardTrigger	autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsJumpForwardTrigger	docker/docker_vimrc.vim	/^let g:UltiSnipsJumpForwardTrigger="<c-b>"$/;"	v
g:UltiSnipsListSnippets	autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsMappingsToIgnore	autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsRemoveSelectModeMappings	autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsSnippetDirectories	autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:_uspy	plugin/UltiSnips.vim	/^       let g:_uspy=":py "$/;"	v
g:_uspy	plugin/UltiSnips.vim	/^       let g:_uspy=":python "$/;"	v
g:_uspy	plugin/UltiSnips.vim	/^       let g:_uspy=":python3 "$/;"	v
g:_uspy	plugin/UltiSnips.vim	/^   let g:_uspy=":py3 "$/;"	v
g:tagbar_type_snippets	ftplugin/snippets.vim	/^let g:tagbar_type_snippets = {$/;"	v
gather_candidates	rplugin/python3/deoplete/sources/ultisnips.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
get_buffer_data	test/vim_interface.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_buffer_filetypes	pythonx/UltiSnips/snippet_manager.py	/^    def get_buffer_filetypes(self):$/;"	m	class:SnippetManager
get_clear_priority	pythonx/UltiSnips/snippet/source/_base.py	/^    def get_clear_priority(self, filetypes):$/;"	m	class:SnippetSource
get_cleared	pythonx/UltiSnips/snippet/source/_base.py	/^    def get_cleared(self, filetypes):$/;"	m	class:SnippetSource
get_cursor_pos	pythonx/UltiSnips/_vim.py	/^def get_cursor_pos():$/;"	f
get_deep_extends	pythonx/UltiSnips/snippet/source/_base.py	/^    def get_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
get_mark_pos	pythonx/UltiSnips/_vim.py	/^def get_mark_pos(name):$/;"	f
get_matching_snippets	pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def get_matching_snippets(self, trigger, potentially, autotrigger_only,$/;"	m	class:SnippetDictionary
get_snippets	pythonx/UltiSnips/snippet/source/_base.py	/^    def get_snippets(self, filetypes, before, possible, autotrigger_only,$/;"	m	class:SnippetSource
get_tabstops	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def get_tabstops(self):$/;"	m	class:SnippetInstance
guess_edit	pythonx/UltiSnips/_diff.py	/^def guess_edit(initial_line, last_text, current_text, vim_state):$/;"	f
handle_action	pythonx/UltiSnips/snippet/source/file/_common.py	/^def handle_action(head, tail, line_index):$/;"	f
handle_context	pythonx/UltiSnips/snippet/source/file/_common.py	/^def handle_context(tail, line_index):$/;"	f
handle_extends	pythonx/UltiSnips/snippet/source/file/_common.py	/^def handle_extends(tail, line_index):$/;"	f
has_option	pythonx/UltiSnips/snippet/definition/_base.py	/^    def has_option(self, opt):$/;"	m	class:SnippetDefinition
has_version	test/vim_interface.py	/^    def has_version(self, major, minor, patchlevel):$/;"	m	class:VimInterface
head_tail	pythonx/UltiSnips/text.py	/^def head_tail(line):$/;"	f
ignores	test/test_Selection.py	/^    ignores = ['H']$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
ignores	test/test_Selection.py	/^    ignores = ['e', 'H']$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
ignores	test/test_Selection.py	/^    ignores = ['e']$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
ignores	test/test_Selection.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
indent_to_spaces	pythonx/UltiSnips/indent_util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
initial_line	pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
initial_line	pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
initial_line	pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
initial_line	pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
initial_line	pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
instantiate	pythonx/UltiSnips/snippet/definition/_base.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnippetDefinition
instantiate	pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnipMateSnippetDefinition
instantiate	pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:UltiSnipsSnippetDefinition
is_buffer_changed_outside	pythonx/UltiSnips/buffer_proxy.py	/^    def is_buffer_changed_outside(self):$/;"	m	class:VimBufferProxy
is_complete_edit	pythonx/UltiSnips/_diff.py	/^def is_complete_edit(initial_line, original, wanted, cmds):$/;"	f
is_focused	test/vim_interface.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_killed	pythonx/UltiSnips/text_objects/_tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
is_process_running	test/vim_interface.py	/^def is_process_running(pid):$/;"	f
is_set	pythonx/UltiSnips/snippet/definition/_base.py	/^    def is_set(self):$/;"	m	class:_SnippetUtilCursor
jump_backwards	pythonx/UltiSnips/snippet_manager.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_forwards	pythonx/UltiSnips/snippet_manager.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
keys	test/test_AnonymousExpansion.py	/^    keys = ' ' + EA + 'Hello' + JF + 'World'$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	test/test_AnonymousExpansion.py	/^    keys = '123 abc' + EA + '123' + JF + '456'$/;"	v	class:Anon_Trigger_Multi
keys	test/test_AnonymousExpansion.py	/^    keys = 'abc ' + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA + '123' + JF + '456'$/;"	v	class:Anon_NoTrigger_Multi
keys	test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA + '\\nabc' + EX$/;"	v	class:Anon_Trigger_Twice
keys	test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA$/;"	v	class:Anon_NoTrigger_Simple
keys	test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA$/;"	v	class:Anon_Trigger_Simple
keys	test/test_AnonymousExpansion.py	/^    keys = 'blah blah abc' + EA$/;"	v	class:Anon_Trigger_Opts
keys	test/test_AnonymousExpansion.py	/^    keys = EA + 'Hello' + JF + 'World'$/;"	v	class:Anon_NoTrigger_BeginningOfLine
keys	test/test_Autocommands.py	/^            ':execute "normal aU" . g:unmapper_call_count . "\\<Esc>"' + "\\n"$/;"	v	class:Autocommands
keys	test/test_Autotrigger.py	/^    keys = 'a'$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
keys	test/test_Autotrigger.py	/^    keys = 'a\\na'$/;"	v	class:Autotrigger_CanMatchContext
keys	test/test_Autotrigger.py	/^    keys = 'abc'$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
keys	test/test_Autotrigger.py	/^    keys = 'abc'$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
keys	test/test_Chars.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
keys	test/test_Chars.py	/^    keys = '\\ttest' + EX$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
keys	test/test_Chars.py	/^    keys = '\\ttest' + EX$/;"	v	class:TrimSpacesAtEndOfLines
keys	test/test_Chars.py	/^    keys = 'oouu trig b' + 2 * ARR_L + EX$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
keys	test/test_Chars.py	/^    keys = 'te ül' + EX + 'hello'$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	test/test_Chars.py	/^    keys = 'te ül' + EX + 'hüüll'$/;"	v	class:Snippet_With_Umlauts_Python
keys	test/test_Chars.py	/^    keys = 'te ül' + EX + 'more text' + JF + JF + 'end'$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	test/test_Chars.py	/^    keys = 'te ül' + EX + 'more text'$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	test/test_Chars.py	/^    keys = 'te ül' + EX + JF + 'more text' + JF + 'end'$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	test/test_Chars.py	/^    keys = 'te ül' + EX + JF + JF + 'end'$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	test/test_Chars.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
keys	test/test_Chars.py	/^    keys = 'te' + LS + '2\\n'$/;"	v	class:Snippet_With_DoubleQuote_List
keys	test/test_Chars.py	/^    keys = 'te' + LS + '2\\n'$/;"	v	class:Snippet_With_SingleQuote_List
keys	test/test_Chars.py	/^    keys = 'te' + LS + '2\\n'$/;"	v	class:Snippet_With_Umlauts_List
keys	test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_EndNL
keys	test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_EndStartNL
keys	test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
keys	test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_JustNL
keys	test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
keys	test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
keys	test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_StartNL
keys	test/test_Chars.py	/^    keys = 'test' + EX + 'z' + JF + 'y'$/;"	v	class:MultiLineDefault_Type
keys	test/test_Chars.py	/^    keys = 'test' + EX + BS + JF + 'Goodbye'$/;"	v	class:LeaveTrailingWhitespace
keys	test/test_Chars.py	/^    keys = 'test' + EX + BS + JF + 'Goodbye'$/;"	v	class:RemoveTrailingWhitespace
keys	test/test_Chars.py	/^    keys = 'test' + EX + BS + JF + 'y'$/;"	v	class:MultiLineDefault_BS
keys	test/test_Chars.py	/^    keys = 'test' + EX + JF + 'y'$/;"	v	class:MultiLineDefault_Jump
keys	test/test_Chars.py	/^    keys = 'teüst' + EX$/;"	v	class:Snippet_With_Umlauts
keys	test/test_Chars.py	/^    keys = 'ööuu trig b' + 2 * ARR_L + EX$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
keys	test/test_Completion.py	/^        COMPL_ACCEPT + ' some more'$/;"	v	class:Completion_SimpleExample_ECR
keys	test/test_Completion.py	/^        JB + 'foo'$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + 'test' + EX + 'com' + COMPL_KW + JF + 'foo'$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	test/test_ContextSnippets.py	/^        "vhh" + EX + "test" + EX$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
keys	test/test_ContextSnippets.py	/^    keys = "e" + EX + " " + "e" + EX$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
keys	test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_CursorIsZeroBased
keys	test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
keys	test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_ExpandOnTrue
keys	test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
keys	test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
keys	test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_SimpleSnippet
keys	test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_UseContext
keys	test/test_ContextSnippets.py	/^    keys = 'e' + EX$/;"	v	class:ContextSnippets_ReportError
keys	test/test_ContextSnippets.py	/^    keys = 'e' + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
keys	test/test_ContextSnippets.py	/^    keys = 'i' + EX$/;"	v	class:ContextSnippets_PriorityKeyword
keys	test/test_Editing.py	/^        ESC + '3k0itest' + EX + ESC + 'u6j'$/;"	v	class:Undo_RemoveWholeSnippet
keys	test/test_Editing.py	/^    keys = 'hello test' + EX + 'upsi' + ESC + 'hh' + 'iabcdef' + ESC + 'u'$/;"	v	class:Undo_RemoveEditInTabstop
keys	test/test_Editing.py	/^    keys = 'i' + EX + 'asd' + JF + 'feh' + ESC + 'uuuu'$/;"	v	class:Undo_CompletelyUndoSnippet
keys	test/test_Editing.py	/^    keys = 'i' + EX + 'asd' + JF + ESC + 'u'$/;"	v	class:Undo_ChangesInPlaceholder
keys	test/test_Editing.py	/^    keys = 'i' + EX + 'i' + EX + ESC + 'u'$/;"	v	class:Undo_RemoveOneSnippetByTime
keys	test/test_Editing.py	/^    keys = 'i' + EX + 'i' + EX + ESC + 'uu'$/;"	v	class:Undo_RemoveOneSnippetByTime2
keys	test/test_Editing.py	/^    keys = 'test' + EX + 'A' + JF + BS + 'BBB'$/;"	v	class:Backspace_TabStop_NotZero
keys	test/test_Editing.py	/^    keys = 'test' + EX + 'A' + JF + BS + 'BBB'$/;"	v	class:Backspace_TabStop_Zero
keys	test/test_Editing.py	/^    keys = 'test' + EX + 'a' + JF + 'test' + EX + ESC + 'u' + JF$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
keys	test/test_Editing.py	/^    keys = 'test' + EX + 'a' + JF + BS + JF + 'Int' + JF + 'body'$/;"	v
keys	test/test_Editing.py	/^    keys = 'test' + EX + 'aaaaa' + JF + BS + JF + '3333'$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
keys	test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'Vkx' + 'i\\nworld\\n'$/;"	v	class:DeleteSnippetInsertion0
keys	test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'ddi' + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'j2dd'$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'u'$/;"	v	class:DeleteSnippetInsertion1
keys	test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'u'$/;"	v	class:Undo_RemoveMultilineSnippet
keys	test/test_Editing.py	/^    keys = 'test' + EX + JF + ESC + 'ddi' + JB + 'hello'$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	test/test_Editing.py	/^    keys = 'test' + EX + JF + ESC + 'ddkji' + JB + 'hello' + JF + 'world'$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	test/test_Editing.py	/^    keys = 'test' + EX+ 'a b c' + JF + 'shallnot'$/;"	v	class:JumpForward_DefSnippet
keys	test/test_Expand.py	/^    keys = 'Wie hallo gehts' + ESC + 'bhi' + EX + 'Huiui!'$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
keys	test/test_Expand.py	/^    keys = 'Wie hallo gehts' + ESC + 'bhi' + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
keys	test/test_Expand.py	/^    keys = 'Wie hallo gehts' + ESC + 'bhi' + EX$/;"	v	class:MultilineExpand_ExpectCorrectResult
keys	test/test_Expand.py	/^    keys = 'hallo ' + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
keys	test/test_Expand.py	/^    keys = 'hallo' + EX + '\\nAnd more'$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
keys	test/test_Expand.py	/^    keys = 'hallo' + EX + '\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b'$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
keys	test/test_Expand.py	/^    keys = 'hallo' + EX + '\\nhallo' + EX$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
keys	test/test_Expand.py	/^    keys = 'hallo' + EX + 'and again'$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
keys	test/test_Expand.py	/^    keys = 'hallo' + EX$/;"	v	class:SimpleExpand_ExpectCorrectResult
keys	test/test_Expand.py	/^    keys = 'na du hallo' + EX + 'and again\\b\\b\\b\\b\\bblub'$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
keys	test/test_Expand.py	/^    keys = 'test' + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	test/test_Fixes.py	/^        '\\n'.join([':redir @a',$/;"	v	class:NonUnicodeDataInUnnamedRegister
keys	test/test_Fixes.py	/^        'xotest' + EX + ESC + ARR_U + 'v0xo' + ESC + 'p'$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
keys	test/test_Fixes.py	/^    keys = '  test' + EX + 'hello' + JF + 'world' + JF + 'blub'$/;"	v	class:Bug1251994
keys	test/test_Fixes.py	/^    keys = '\\t\\t\\tpd' + EX + '2'$/;"	v	class:VirtualEdit
keys	test/test_Fixes.py	/^    keys = 'test' + EX + 'foo'$/;"	v	class:ShiftWidthZero
keys	test/test_Fixes.py	/^    keys = 'yank' + ESC + 'by4lea test' + EX + 'HELLO' + JF + JF + ESC + 'p'$/;"	v	class:RetainsTheUnnamedRegister
keys	test/test_Folding.py	/^    keys = 'fold' + EX + 'hi' + ESC + 'jdd'$/;"	v
keys	test/test_Folding.py	/^    keys = 'fold' + EX + 'hi'$/;"	v
keys	test/test_Folding.py	/^    keys = 'test' + EX + 'Ball'$/;"	v
keys	test/test_Folding.py	/^    keys = 'test' + EX + JF + 'sub junk {}'$/;"	v
keys	test/test_Format.py	/^        JF + 'end'$/;"	v	class:FOSimple_Break_ExpectCorrectResult
keys	test/test_Format.py	/^    keys = '    test' + EX + 'Hui'$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	test/test_Format.py	/^    keys = '    test' + EX + '\\n' + 'blah'$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	test/test_Format.py	/^    keys = '    test' + EX + 'blah'$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	test/test_Format.py	/^    keys = 'inc' + EX + 'cstdl'$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
keys	test/test_Format.py	/^    keys = 'inc' + EX + 'foo'$/;"	v
keys	test/test_Format.py	/^    keys = 'm' + EX + 'm1' + EX + '\\nHallo'$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	test/test_Format.py	/^    keys = 'm' + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	test/test_Format.py	/^    keys = 'test' + EX + 'This is a longer text that should wrap'$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
keys	test/test_Format.py	/^    keys = ('test' + EX + 'This is a longer snippet that should wrap properly '$/;"	v	class:FOTextAfter_ExpectCorrectResult
keys	test/test_Format.py	/^    keys = ('test' + EX + 'This is a longersnippet that should wrap properly')$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
keys	test/test_Interpolation.py	/^    keys = '    test' + EX$/;"	v	class:PythonCodeOld_IndentedMultiline
keys	test/test_Interpolation.py	/^    keys = '    test' + EX$/;"	v	class:PythonCode_MultilineIndented
keys	test/test_Interpolation.py	/^    keys = '    test' + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
keys	test/test_Interpolation.py	/^    keys = ' ' * 8 + 'test' + EX  # < 8 works.$/;"	v	class:PythonCode_IndentProblem
keys	test/test_Interpolation.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:PythonVisual_SelectOneWord
keys	test/test_Interpolation.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:PythonVisual_LineSelect_Simple
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'Hallo Welt'$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'Hallo Welt'$/;"	v	class:PythonCode_ReferencePlaceholderBefore
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'aaa'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'abc'$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'and more'$/;"	v	class:TabStop_Shell_SimpleExample
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'and more'$/;"	v	class:TabStop_Shell_TextInNextLine
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'and more'$/;"	v	class:TabStop_Shell_WithUmlauts
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'blah' + ', bah'$/;"	v	class:PythonCode_CanOverwriteTabstop
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'ho'$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'ho'$/;"	v	class:PythonCode_ReferencePlaceholder
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + 'overwrite' + JF + 'and more'$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + ESC + "otest" + EX + JF + ESC$/;"	v
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + ESC + "otest" + EX + JF + JF + JF + JF$/;"	v
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + JF + 'and more'$/;"	v
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + JF + 'and more'$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	test/test_Interpolation.py	/^    keys = 'test' + EX + JF + 'okay'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCodeOld_SimpleExample
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_MultiAppend
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_SimpleAppend
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_SimpleExample
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_TransformedBeforeMultiLine
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_UseNewOverOld
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:Python_WeirdScoping_Error
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	test/test_Interpolation.py	/^    keys = 'ups test' + EX$/;"	v	class:PythonCode_TrickyReferences
keys	test/test_ListSnippets.py	/^    keys = ' ' + LS + '3\\n'$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
keys	test/test_ListSnippets.py	/^    keys = '' + LS + '3\\n'$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
keys	test/test_ListSnippets.py	/^    keys = 'hallo qualle' + LS + 'Hi'$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
keys	test/test_ListSnippets.py	/^    keys = 'hallo test' + LS + '1\\n'$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
keys	test/test_ListSnippets.py	/^    keys = 'hallo test' + LS + '2\\n'$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
keys	test/test_ListSnippets.py	/^    keys = '} ' + LS + '3\\n'$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
keys	test/test_Mirror.py	/^        'ehihi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	test/test_Mirror.py	/^        'eiab' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	test/test_Mirror.py	/^        'wahi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	test/test_Mirror.py	/^        'wihi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	test/test_Mirror.py	/^        JF + 'blah' + JF + 'end'$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'hallo test' + EX + 'elt'$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'a'$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo Du\\nHi\\b\\bAch Blah'$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo du'$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo du\\nwie gehts'$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo test'$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo welt'$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo welt'$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo\\b\\b'$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo\\b\\bhups'$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo\\nagain'$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + 'do snap'$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + 'overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + 'overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + JF + 'end'$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin'$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin'$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'world'$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + 'world'$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX + BS + 'hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
keys	test/test_Mirror.py	/^    keys = 'ups test blah' + ESC + '02f i' + EX + 'hallo'$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
keys	test/test_Movement.py	/^        'hallo'$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	test/test_Movement.py	/^        'testhallo\\n'$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	test/test_Movement.py	/^        EX + 'tab' + ARR_R + JF + 'hallo'$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	test/test_Movement.py	/^        JF + 'hallo'$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	test/test_Movement.py	/^        JF + 'hallo'$/;"	v	class:IMMoving_NoExiting_ECR
keys	test/test_Movement.py	/^        JF + 'hallo'$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	test/test_Movement.py	/^    keys = '<trh' + EX + 'blah' + JF + BS + BS + JF + 'end'$/;"	v	class:CursorMovement_BS_InEditMode
keys	test/test_Movement.py	/^    keys = 'hello test this' + ESC + '02f i' + EX + 'tab' + JF + 'hallo'$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	test/test_Movement.py	/^    keys = 'test' + EX + 'text' + 3 * ARR_U + 6 * ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	test/test_Movement.py	/^    keys = 'test' + EX + 'this is something\\nvery nice\\nnot' + JF + 'more text'$/;"	v	class:CursorMovement_Multiline_ECR
keys	test/test_Movement.py	/^    keys = 'test' + EX + 'this' + 2 * ARR_L + 'hallo\\nwelt'$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	test/test_MultipleMatches.py	/^    keys = 'test' + EX + ' ' + ESC + ESC + 'ahi'$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	test/test_MultipleMatches.py	/^    keys = 'test' + EX + '0\\n' + 'hi'$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
keys	test/test_MultipleMatches.py	/^    keys = 'test' + EX + '1\\n'$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
keys	test/test_MultipleMatches.py	/^    keys = 'test' + EX + '2\\n'$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
keys	test/test_MultipleMatches.py	/^    keys = 'test' + EX + '5\\n'$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
keys	test/test_MultipleMatches.py	/^    keys = 'test' + EX + ESC + 'hi'$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
keys	test/test_ParseSnippets.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	test/test_ParseSnippets.py	/^    keys = 'ab' + EX + '\\nac' + EX$/;"	v	class:ParseSnippets_Global_Python
keys	test/test_ParseSnippets.py	/^    keys = 'ab' + EX$/;"	v	class:ParseSnippets_Global_Local_Python
keys	test/test_ParseSnippets.py	/^    keys = 'abc def' + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
keys	test/test_ParseSnippets.py	/^    keys = 'foo' + EX + ' bar' + EX + '\\nbar' + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
keys	test/test_ParseSnippets.py	/^    keys = 'inv snip' + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	test/test_ParseSnippets.py	/^    keys = 'snip test' + EX$/;"	v	class:ParseSnippets_MultiWord_Description
keys	test/test_ParseSnippets.py	/^    keys = 'snippet test' + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
keys	test/test_ParseSnippets.py	/^    keys = 'test snip' + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	test/test_ParseSnippets.py	/^    keys = 'test snip' + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	test/test_ParseSnippets.py	/^    keys = 'test snip' + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
keys	test/test_ParseSnippets.py	/^    keys = 'test test test' + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
keys	test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippet
keys	test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
keys	test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
keys	test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
keys	test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
keys	test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintPythonStacktrace
keys	test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
keys	test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearAll
keys	test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
keys	test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
keys	test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_SimpleSnippet
keys	test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_UnknownDirective
keys	test/test_ParseSnippets.py	/^    keys = 'toclear' + EX + '\\n' + 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearOne
keys	test/test_ParseSnippets.py	/^    keys = 'toclear' + EX + '\\n' + 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearTwo
keys	test/test_Plugin.py	/^    keys = ('longtextlongtext\\n' +$/;"	v	class:Plugin_SuperTab_SimpleTest
keys	test/test_Recursive.py	/^        'hello frac' + EX + JF + JF + 'world'$/;"	v	class:RecTabsStops_TypeInZero_ECR
keys	test/test_Recursive.py	/^        'm1' + EX + 'CD' + JF + 'DE' + JF + 'AB'$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	test/test_Recursive.py	/^        EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	test/test_Recursive.py	/^        JF + 'end'$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
keys	test/test_Recursive.py	/^        JF + 'end'$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	test/test_Recursive.py	/^        JF + 'end'$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
keys	test/test_Recursive.py	/^        JF + 'endone' + JF + 'two' + JF + 'totalend'$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	test/test_Recursive.py	/^        JF + 'three' + JF + 'four' + JF + 'end'$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	test/test_Recursive.py	/^        JF + 'three' + JF + 'four' + JF + 'end'$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	test/test_Recursive.py	/^        JF + 'ups' + JF + 'three' + JF + 'end'$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	test/test_Recursive.py	/^        JF + 'ups' + JF + 'world' + JF + 'end'$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	test/test_Recursive.py	/^        JF + 'ups' + JF + 'world' + JF + 'end'$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	test/test_Recursive.py	/^        JF + 'world' + JF + 'ups' + JF + 'end'$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
keys	test/test_Recursive.py	/^        JF + 'world'$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	test/test_Recursive.py	/^    keys = 'form_for user, namespace: some_namespace, html: {i' + EX + 'i' + EX$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
keys	test/test_Recursive.py	/^    keys = 'm' + EX + '    hallo m' + EX + 'hi'$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + '    m' + EX + 'hi'$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'hello m' + EX + 'world m' + EX + 'end'$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'hi' + JF + 'm1' + EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hello' + JF + 'world' + JF + JF + JF + 'end'$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hello' + JF + JF + JF + 'world' + JF + 'end'$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hi' + JF + 'hallo' + JF + 'end'$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hi'$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + ' m1' + EX + 'hi' + JF + 'two' + JF + 'end'$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'hi' + JF + 'two' + JF + 'end'$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + JF + 'm1' + EX + 'hi' + JF + 'end'$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	test/test_Recursive.py	/^    keys = 'm' + EX + JF + JF + BS + 'm' + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	test/test_Selection.py	/^    keys = 'for' + EX + 'k' + JF$/;"	v
keys	test/test_Selection.py	/^    keys = 'test' + EX + 'Hello'$/;"	v	class:_SelectModeMappings
keys	test/test_Selection.py	/^    keys = 'test' + EX + 'ui' + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	test/test_Selection.py	/^    keys = 'test' + EX + 'ui' + JF$/;"	v	class:OldSelection_SimpleTabstop_Test
keys	test/test_SnipMate.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'v' + EX$/;"	v	class:snipMate_Visual_Simple
keys	test/test_SnipMate.py	/^    keys = 'def' + EX$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
keys	test/test_SnipMate.py	/^    keys = 'for' + EX + 'blub' + JF + 'j' + JF + 'hi'$/;"	v	class:snipMate_TestMirrors
keys	test/test_SnipMate.py	/^    keys = 'hello' + EX + '2\\n'$/;"	v	class:snipMate_MultiMatches
keys	test/test_SnipMate.py	/^    keys = 'hello' + EX + '\\nhello1' + EX + '\\nhello2' + EX$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
keys	test/test_SnipMate.py	/^    keys = 'hello' + EX$/;"	v	class:snipMate_Disabled
keys	test/test_SnipMate.py	/^    keys = 'hello' + EX$/;"	v	class:snipMate_SimpleSnippet
keys	test/test_SnipMate.py	/^    keys = 'hello' + EX$/;"	v	class:snipMate_SimpleSnippetSubDirectory
keys	test/test_SnipMate.py	/^    keys = 'opt' + EX + 'some' + JF + 'not' + JF + 'ende'$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
keys	test/test_SnipMate.py	/^    keys = 'opt' + EX + 'some' + JF + JF + 'ende'$/;"	v	class:snipMate_TestMirrorsInPlaceholders
keys	test/test_SnipMate.py	/^    keys = 'test' + EX + 'blub' + JF + 'blah'$/;"	v	class:snipMate_TestNoBraceTabstops
keys	test/test_SnipMate.py	/^    keys = 'test' + EX + 'blub' + JF + 'blah'$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
keys	test/test_SnipMate.py	/^    keys = 'test' + EX + JF + 'hi'$/;"	v	class:snipMate_NoNestedTabstops
keys	test/test_SnipMate.py	/^    keys = 'test' + EX$/;"	v	class:snipMate_EmptyLinesContinueSnippets
keys	test/test_SnipMate.py	/^    keys = 'test' + EX$/;"	v	class:snipMate_Interpolation
keys	test/test_SnipMate.py	/^    keys = 'test' + EX$/;"	v	class:snipMate_InterpolationWithSystem
keys	test/test_SnippetActions.py	/^    keys = "a" + EX + "1" + JF + "b" + EX + " c" + EX + "2" + JF + "3" + JF + "4" + JF + JF$/;"	v	class:SnippetActions_UseCorrectJumpActions
keys	test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
keys	test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
keys	test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
keys	test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + " or 4" + JF + "5"$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
keys	test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + "4"$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
keys	test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3"$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
keys	test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
keys	test/test_SnippetActions.py	/^    keys = '[]' + ARR_L + 'a' + EX + '1' + JF + '2'$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
keys	test/test_SnippetActions.py	/^    keys = '\\n3' + ARR_U + 'a' + EX + '1' + JF + '2'$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
keys	test/test_SnippetActions.py	/^    keys = '\\ni' + EX + 'i' + EX + 'x' + JF + 'y' + JF + JF + 'z'$/;"	v	class:SnippetActions_CanModifyParentBody
keys	test/test_SnippetActions.py	/^    keys = '\\ni' + EX + 'i' + EX + 'x'$/;"	v	class:SnippetActions_EnsureIndent
keys	test/test_SnippetActions.py	/^    keys = '\\ni' + EX + 'x' + JF + 'y'$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
keys	test/test_SnippetActions.py	/^    keys = 'a' + EX + '123'$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
keys	test/test_SnippetActions.py	/^    keys = 'a' + EX$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
keys	test/test_SnippetActions.py	/^    keys = 'a' + EX$/;"	v	class:SnippetActions_PostActionModifiesBuffer
keys	test/test_SnippetActions.py	/^    keys = 'a' + EX$/;"	v	class:SnippetActions_PreActionModifiesBuffer
keys	test/test_SnippetActions.py	/^    keys = 'i' + EX + 'blah' + JF + 'n' + EX + JF + 'pass'$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
keys	test/test_SnippetActions.py	/^    keys = 'i' + EX + 'p' + EX + JF + 'z'$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
keys	test/test_SnippetActions.py	/^    keys = 'i' + EX$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
keys	test/test_SnippetOptions.py	/^    keys = '   test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	test/test_SnippetOptions.py	/^    keys = '   test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	test/test_SnippetOptions.py	/^    keys = '  test it' + EX + '1\\n'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	test/test_SnippetOptions.py	/^    keys = '  test' + EX + '1\\n'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	test/test_SnippetOptions.py	/^    keys = '  test' + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
keys	test/test_SnippetOptions.py	/^    keys = '  test' + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
keys	test/test_SnippetOptions.py	/^    keys = ' .' + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
keys	test/test_SnippetOptions.py	/^    keys = ' .a' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
keys	test/test_SnippetOptions.py	/^    keys = '$test' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	test/test_SnippetOptions.py	/^    keys = '-test' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	test/test_SnippetOptions.py	/^    keys = '.' + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
keys	test/test_SnippetOptions.py	/^    keys = '[[test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
keys	test/test_SnippetOptions.py	/^    keys = '\\t\\thi' + EX$/;"	v	class:No_Tab_Expand_RealWorld
keys	test/test_SnippetOptions.py	/^    keys = '\\ttest' + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
keys	test/test_SnippetOptions.py	/^    keys = 'a test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	test/test_SnippetOptions.py	/^    keys = 'a test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	test/test_SnippetOptions.py	/^    keys = 'a test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	test/test_SnippetOptions.py	/^    keys = 'a test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	test/test_SnippetOptions.py	/^    keys = 'a(test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
keys	test/test_SnippetOptions.py	/^    keys = 'a-test it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	test/test_SnippetOptions.py	/^    keys = 'a-test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	test/test_SnippetOptions.py	/^    keys = 'a.' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
keys	test/test_SnippetOptions.py	/^    keys = 'abc test test' + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	test/test_SnippetOptions.py	/^    keys = 'abc test test' + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	test/test_SnippetOptions.py	/^    keys = 'atest it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	test/test_SnippetOptions.py	/^    keys = 'atest it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
keys	test/test_SnippetOptions.py	/^    keys = 'atest' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	test/test_SnippetOptions.py	/^    keys = 'atest' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
keys	test/test_SnippetOptions.py	/^    keys = 'test ' + EX$/;"	v	class:SnippetOptions_Regex_WithSpace
keys	test/test_SnippetOptions.py	/^    keys = 'test cabfed' + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
keys	test/test_SnippetOptions.py	/^    keys = 'test cabfed' + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
keys	test/test_SnippetOptions.py	/^    keys = 'test it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	test/test_SnippetOptions.py	/^    keys = 'test it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
keys	test/test_SnippetOptions.py	/^    keys = 'test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	test/test_SnippetOptions.py	/^    keys = 'test me' + EX$/;"	v	class:MultiWordSnippet_Simple
keys	test/test_SnippetOptions.py	/^    keys = 'test test abc' + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	test/test_SnippetOptions.py	/^    keys = 'test test test' + EX$/;"	v	class:SnippetOptions_Regex_Multiple
keys	test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_ET
keys	test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_ET_SW
keys	test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
keys	test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_No_TS
keys	test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_Simple
keys	test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
keys	test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_Regex_Expand
keys	test/test_SnippetOptions.py	/^    keys = 'ßßtest' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	test/test_SnippetPriorities.py	/^    keys = 'test me' + EX$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
keys	test/test_SnippetPriorities.py	/^    keys = 'test' + EX + '1\\n\\n' + 'test' + EX + '2\\n'$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
keys	test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
keys	test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
keys	test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
keys	test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_OverwriteExisting
keys	test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
keys	test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear
keys	test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear2
keys	test/test_SnippetPriorities.py	/^    keys = 'test1' + EX$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
keys	test/test_SnippetPriorities.py	/^    keys = (ESC + ':set ft=p\\n' + 'itest' + EX + '\\n' +$/;"	v	class:SnippetPriorities_ClearedByChild
keys	test/test_TabStop.py	/^        ' allaway' + JF + 'Third' + JF + 'Last'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
keys	test/test_TabStop.py	/^        'Lets replace it again' + JF + 'Blah' + JF + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
keys	test/test_TabStop.py	/^        'Lets replace it again' + JF + 'Blah' + JF + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
keys	test/test_TabStop.py	/^        'Nupl' + JF + 'Nox'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
keys	test/test_TabStop.py	/^        + JF + 'Hi'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
keys	test/test_TabStop.py	/^        JF + 'test' + JF + 'one more' + JF$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'echo' + EX + 'test'$/;"	v	class:TabStop_Exit_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'echo' + EX$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Nase'$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Nase'$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Test' + JF + 'Hi' + JF + JF + 'du'$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'hallo' + EX + 'haselnut' + 2 * ARR_L + 'hips' + JF + 'end'$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'hallo' + EX + 'na' + JF + 'Du Nase'$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'hallo' + EX + 'na' + JF + 'Du Nase'$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'hallo' + EX + 'ship'$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'hallo' + EX + JF + 'Test' + JF + 'Hi'$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'hallo' + EX + JF + 'Test' + JF + 'Hi'$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'i' + EX + EX + '1' + JF + '2' + JF + ' after' + JF + '3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
keys	test/test_TabStop.py	/^    keys = 'i' + EX + EX + '1' + JF + '2' + JF + ' after' + JF + '3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
keys	test/test_TabStop.py	/^    keys = 'test' + EX + ' blah' + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'Hello' + JF + 'World' + JF$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'Hello' + JF + 'World'$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'Nothing'$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'Nothing'$/;"	v	class:TabStop_Multiline_Overwrite
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'WORLD' + JF + 'End'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	test/test_TabStop.py	/^    keys = 'test' + EX + '[ -u -v -d ]'$/;"	v	class:TabStop_EscapingChars_RealLife
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'blub' + JF + 'hello'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'hello' + JF + 'world'$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:TabStop_EscapingCharsDollars
keys	test/test_TabStop.py	/^    keys = 'test' + EX + 'ups' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
keys	test/test_TabStop.py	/^    keys = 'test' + EX + BS + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
keys	test/test_TabStop.py	/^    keys = 'test' + EX + BS + JF + 'Nothing'$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	test/test_TabStop.py	/^    keys = 'test' + EX + ESC + '0ihi'$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	test/test_TabStop.py	/^    keys = 'test' + EX + ESC + '0ihi'$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	test/test_TabStop.py	/^    keys = 'test' + EX + ESC + '0ihi'$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Blah'$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Hallo' + JF + 'Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'WORLD' + JF + 'End'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + '\\n' + JF + 't'$/;"	v	class:TabStop_CROnlyOnSelectedNear
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'hello'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'longertext' + JB + 'overwrite' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'longertext' + JB + JF + 'overwrite' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'longertext' + JB + JF + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'no' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'ups' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + JF + 'Hallo' + JB + JB + 'Blah' + JF + 'Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	test/test_TabStop.py	/^    keys = 'test' + EX + JF + JF + 'Hallo' + JF + 'Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsBackticks
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsDollars1
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingChars_Backslash
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Multiline_Leave
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
keys	test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	test/test_Transformation.py	/^           'test' + EX + 'hallo->'$/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	test/test_Transformation.py	/^        'ehihi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	test/test_Transformation.py	/^        'eiab' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	test/test_Transformation.py	/^        'wahi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	test/test_Transformation.py	/^        'wihi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	test/test_Transformation.py	/^    keys = 'ascii' + EX + 'éèàçôïÉÈÀÇÔÏ€'$/;"	v	class:Transformation_LowerCaseAsciiResult
keys	test/test_Transformation.py	/^    keys = 'ascii' + EX + 'éèàçôïÉÈÀÇÔÏ€'$/;"	v	class:Transformation_SimpleCaseAsciiResult
keys	test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'b'$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'some\\b\\b\\b\\b\\b'$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'some\\b\\b\\b\\bmore'$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	test/test_Transformation.py	/^    keys = 'hallo test' + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'HALLO'$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'SomE tExt '$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'TEST'$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'a b  c d e f ghhh h oha'$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'a some more text'$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'a some'$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'a, nice,   building'$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'a, nice, building'$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'aa'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'aa'$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'ab'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'b some'$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'dead parrot'$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'foo boo aoo'$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo foo boy'$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'hi' + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'sometext' + JF + 'overwrite'$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'sometext' + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'test, hallo'$/;"	v	class:Transformation_CINewlines_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'test, hallo'$/;"	v	class:Transformation_CITabstop_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + 'test, halul'$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + BS + 'hallo'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + BS + JF + 'hi'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	test/test_Transformation.py	/^    keys = 'test' + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	test/test_Transformation.py	/^    keys = 'test\\ntest\\ntest' + ESC + 'V2k' + EX + 'test' + EX$/;"	v	class:Transformation_OptionMultiline_ECR
keys	test/test_UltiSnipFunc.py	/^        JF + 'hi3' + JF + 'hi4' + ESC + ';Hello'$/;"	v
keys	test/test_UltiSnipFunc.py	/^    keys = 'abc test' + EX$/;"	v	class:AddFunc_Opt
keys	test/test_UltiSnipFunc.py	/^    keys = 'abc test' + EX$/;"	v	class:AddFunc_Simple
keys	test/test_UltiSnipFunc.py	/^    keys = 'testme' + EX + 'hi1' + JF + 'hi2' + JF + 'hi3' + JF + 'hi4'$/;"	v
keys	test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict2
keys	test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict3
keys	test/test_UltiSnipFunc.py	/^    keys = ('blumba' + EX + ESC +$/;"	v	class:AddNewSnippetSource
keys	test/test_UltiSnipFunc.py	/^    keys = ('test=(type(UltiSnips#SnippetsInCurrentScope()) . len(UltiSnips#SnippetsInCurrentScope()) . ' +$/;"	v	class:VerifyVimDict1
keys	test/test_Visual.py	/^        ARR_U * 2 + 'V' + ARR_D + EX + '\\tif' + EX$/;"	v	class:Visual_LineSelect_DedentLine
keys	test/test_Visual.py	/^        EX + 'mmm' + JF + 'n' + JF + 'done' + ESC + 'o'$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	test/test_Visual.py	/^        EX + 'test' + EX + 'jup' + JF + 'hi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	test/test_Visual.py	/^        EX + 'test' + EX + 'jup' + JF + 'hi'$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	test/test_Visual.py	/^        EX + 'test' + EX + 'super' + JF + 'done'$/;"	v	class:Visual_LineSelect_WithTabStop
keys	test/test_Visual.py	/^        EX + 'test' + EX + 'ups' + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	test/test_Visual.py	/^    keys = '    hello\\n    nice\\n\\tworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	test/test_Visual.py	/^    keys = '\\tblablub' + ESC + '5hv3l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	test/test_Visual.py	/^    keys = 'bla blub\\n  helloi' + ESC + '0k4lvjll' + EX + 'test' + EX$/;"	v	class:Visual_CrossOneLine
keys	test/test_Visual.py	/^    keys = 'blablub' + ESC + '0lv4l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord_Inword
keys	test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v$' + EX + 'test' + EX + ESC + 'o'$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX + '\\ntest' + EX$/;"	v	class:Visual_ExpandTwice
keys	test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX + 'hello'$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX + JF + 'hello'$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:VisualTransformation_SelectOneWord
keys	test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord
keys	test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_Simple
keys	test/test_Visual.py	/^    keys = 'test' + EX + 'abc'$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	test/test_Visual.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	test/test_Visual.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	test/test_Visual.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	test/test_Visual.py	/^    keys = 'xxxyyyyxxx' + ESC + '4|vlll' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWordExclusive
keys	test/test_Visual.py	/^    keys = 'xxxyyyyxxx' + ESC + '4|vlll' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWordInclusive
keys	test/vim_test_case.py	/^    keys = ''$/;"	v	class:VimTestCase
launch	pythonx/UltiSnips/snippet/definition/_base.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:SnippetDefinition
launch	test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterface
launch	test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterfaceTmuxNeovim
leave_with_wait	test/vim_interface.py	/^    def leave_with_wait(self):$/;"	m	class:VimInterface
line_index	pythonx/UltiSnips/text.py	/^    def line_index(self):$/;"	m	class:LineIterator
line_till_cursor	pythonx/UltiSnips/_vim.py	/^    def line_till_cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
list_snippets	pythonx/UltiSnips/snippet_manager.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
location	pythonx/UltiSnips/snippet/definition/_base.py	/^    def location(self):$/;"	m	class:SnippetDefinition
main	test_all.py	/^    def main():$/;"	f	function:setup_other_plugins
maps	test/test_Selection.py	/^    maps = ('', '')$/;"	v	class:_SelectModeMappings
maps	test/test_Selection.py	/^    maps = ('H', 'x')$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	test/test_Selection.py	/^    maps = ('H', 'x')$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
maps	test/test_Selection.py	/^    maps = ('H', 'x'), ('e', 'l')$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	test/test_Selection.py	/^    maps = ('H', 'x'), ('e', 'l')$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	test/test_Selection.py	/^    maps = ('e', 'l'), ('H', 'x')$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
matched	pythonx/UltiSnips/snippet/definition/_base.py	/^    def matched(self):$/;"	m	class:SnippetDefinition
matches	pythonx/UltiSnips/snippet/definition/_base.py	/^    def matches(self, before, visual_content=None):$/;"	m	class:SnippetDefinition
maxDiff	test/vim_test_case.py	/^    maxDiff = None  # Show all diff output, always.$/;"	v	class:VimTestCase
mkline	pythonx/UltiSnips/text_objects/_python_code.py	/^    def mkline(self, line='', indent=None):$/;"	m	class:SnippetUtil
mode	pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VimPosition
mode	pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
move	pythonx/UltiSnips/position.py	/^    def move(self, pivot, delta):$/;"	m	class:Position
name_temp	test/vim_interface.py	/^    def name_temp(self, file_path):$/;"	m	class:TempFileManager
neocomplete#sources#ultisnips#define	autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define()$/;"	f
new_scratch_buffer	pythonx/UltiSnips/_vim.py	/^def new_scratch_buffer(text):$/;"	f
next	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    next = __next__  # for python2$/;"	v	class:_TextIterator
next	pythonx/UltiSnips/text.py	/^    next = __next__  # for python2$/;"	v	class:LineIterator
no_unidecode_available	test/util.py	/^def no_unidecode_available():$/;"	f
ntabs_to_proper_indent	pythonx/UltiSnips/indent_util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
number	pythonx/UltiSnips/_vim.py	/^    def number(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
number	pythonx/UltiSnips/text_objects/_tabstop.py	/^    def number(self):$/;"	m	class:TabStop
obj	pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_DelSameLine1
obj	pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
obj	pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
obj	pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
obj	pythonx/UltiSnips/test_position.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
obj	pythonx/UltiSnips/test_position.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
open_ascii_file	pythonx/UltiSnips/compatibility.py	/^    def open_ascii_file(filename, mode):$/;"	f
opt	pythonx/UltiSnips/text_objects/_python_code.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
option_set_to	pythonx/UltiSnips/_vim.py	/^def option_set_to(name, new_value):$/;"	f
output	test/vim_test_case.py	/^    output = ''$/;"	v	class:VimTestCase
overwrite	pythonx/UltiSnips/text_objects/_base.py	/^    def overwrite(self, buf, gtext):$/;"	m	class:TextObject
overwrite_with_initial_text	pythonx/UltiSnips/text_objects/_base.py	/^    def overwrite_with_initial_text(self, buf):$/;"	m	class:TextObject
p	pythonx/UltiSnips/text_objects/_python_code.py	/^    def p(self):$/;"	m	class:SnippetUtil
parse_and_instantiate	pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_and_instantiate	pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_args	test_all.py	/^    def parse_args():$/;"	f	function:setup_other_plugins
parse_content	utils/get_tm_snippets.py	/^def parse_content(c):$/;"	f
peek	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def peek(self, count=1):$/;"	m	class:_TextIterator
peek	pythonx/UltiSnips/text.py	/^    def peek(self):$/;"	m	class:LineIterator
placeholder	pythonx/UltiSnips/vim_state.py	/^    def placeholder(self):$/;"	m	class:VisualContentPreserver
plugin_cache_dir	test/vim_test_case.py	/^def plugin_cache_dir():$/;"	f
plugin_cache_dir	test_all.py	/^def plugin_cache_dir():$/;"	f
plugins	test/test_Plugin.py	/^    plugins = ['ervandew\/supertab']$/;"	v	class:Plugin_SuperTab_SimpleTest
plugins	test/vim_test_case.py	/^    plugins = []$/;"	v	class:VimTestCase
pos	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	pythonx/UltiSnips/vim_state.py	/^    def pos(self):$/;"	m	class:VimState
ppos	pythonx/UltiSnips/vim_state.py	/^    def ppos(self):$/;"	m	class:VimState
preserve	pythonx/UltiSnips/snippet/definition/_base.py	/^    def preserve(self):$/;"	m	class:_SnippetUtilCursor
print_stack	pythonx/UltiSnips/debug.py	/^def print_stack():$/;"	f
priority	pythonx/UltiSnips/snippet/definition/_base.py	/^    def priority(self):$/;"	m	class:SnippetDefinition
python3	test/test_Plugin.py	/^def python3():$/;"	f
read_text_file	test/vim_interface.py	/^def read_text_file(filename):$/;"	f
refresh	pythonx/UltiSnips/snippet/source/_base.py	/^    def refresh(self):$/;"	m	class:SnippetSource
refresh	pythonx/UltiSnips/snippet/source/file/_base.py	/^    def refresh(self):$/;"	m	class:SnippetFileSource
register_snippet_source	pythonx/UltiSnips/snippet_manager.py	/^    def register_snippet_source(self, name, snippet_source):$/;"	m	class:SnippetManager
remember_buffer	pythonx/UltiSnips/vim_state.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	pythonx/UltiSnips/vim_state.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_unnamed_register	pythonx/UltiSnips/vim_state.py	/^    def remember_unnamed_register(self, text_to_expect):$/;"	m	class:VimState
remembered_buffer	pythonx/UltiSnips/vim_state.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
replace	pythonx/UltiSnips/text_objects/_transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replace_initial_text	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def replace_initial_text(self, buf):$/;"	m	class:SnippetInstance
replace_vars	utils/get_tm_snippets.py	/^def replace_vars(m):$/;"	f
replay_user_edits	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def replay_user_edits(self, cmds, ctab=None):$/;"	m	class:SnippetInstance
reset	pythonx/UltiSnips/indent_util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	pythonx/UltiSnips/vim_state.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset_indent	pythonx/UltiSnips/text_objects/_python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
resolve_ambiguity	pythonx/UltiSnips/snippet/parsing/_base.py	/^def resolve_ambiguity(all_tokens, seen_ts):$/;"	f
restore_unnamed_register	pythonx/UltiSnips/vim_state.py	/^    def restore_unnamed_register(self):$/;"	m	class:VimState
runTest	pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	pythonx/UltiSnips/test_position.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	test/vim_test_case.py	/^    def runTest(self):$/;"	m	class:VimTestCase
running_on_windows	test/util.py	/^def running_on_windows():$/;"	f
rv	pythonx/UltiSnips/text_objects/_python_code.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	pythonx/UltiSnips/text_objects/_python_code.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
s:save_cpo	autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	ftplugin/snippets.vim	/^let s:save_cpo = &cpo$/;"	v
s:set_match_words	ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
s:source	autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
s:unite_source	autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
s:unite_source	autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
save_mark	pythonx/UltiSnips/_vim.py	/^def save_mark(name):$/;"	f
select	pythonx/UltiSnips/_vim.py	/^def select(start, end):$/;"	f
select_next_tab	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def select_next_tab(self, backwards=False):$/;"	m	class:SnippetInstance
send	test/vim_interface.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
send_to_terminal	test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterface
send_to_terminal	test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterface
send_to_vim	test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmuxNeovim
set	pythonx/UltiSnips/snippet/definition/_base.py	/^    def set(self, line, column):$/;"	m	class:_SnippetUtilCursor
setUp	test/vim_test_case.py	/^    def setUp(self):$/;"	m	class:VimTestCase
set_cursor_from_pos	pythonx/UltiSnips/_vim.py	/^def set_cursor_from_pos(pos):$/;"	f
set_mark_from_pos	pythonx/UltiSnips/_vim.py	/^def set_mark_from_pos(name, pos):$/;"	f
setup_other_plugins	test_all.py	/^def setup_other_plugins(all_plugins):$/;"	f
shift	pythonx/UltiSnips/text_objects/_python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
silent_call	test/vim_interface.py	/^def silent_call(cmd):$/;"	f
skip_if	test/test_Autotrigger.py	/^        if self.vim.has_version(7, 4, 214) else None$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
skip_if	test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
skip_if	test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchContext
skip_if	test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
skip_if	test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
skip_if	test/test_Chars.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:_UmlautsBase
skip_if	test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
skip_if	test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
skip_if	test/test_Format.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
skip_if	test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Leave
skip_if	test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
skip_if	test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_ShebangPython
skip_if	test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_SimpleExample
skip_if	test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
skip_if	test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
skip_if	test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TextInNextLine
skip_if	test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_WithUmlauts
skip_if	test/test_SnippetOptions.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
skip_if	test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_LowerCaseAsciiResult
skip_if	test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_SimpleCaseAsciiResult
skip_if	test/test_UltiSnipFunc.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
skip_if	test/vim_test_case.py	/^    skip_if = lambda self: None$/;"	v	class:VimTestCase
sleeptime	test/vim_test_case.py	/^    sleeptime = 0.00$/;"	v	class:VimTestCase
snipMate_Disabled	test/test_SnipMate.py	/^class snipMate_Disabled(_VimTest):$/;"	c
snipMate_EmptyLinesContinueSnippets	test/test_SnipMate.py	/^class snipMate_EmptyLinesContinueSnippets(_VimTest):$/;"	c
snipMate_Extends	test/test_SnipMate.py	/^class snipMate_Extends(_VimTest):$/;"	c
snipMate_Interpolation	test/test_SnipMate.py	/^class snipMate_Interpolation(_VimTest):$/;"	c
snipMate_InterpolationWithSystem	test/test_SnipMate.py	/^class snipMate_InterpolationWithSystem(_VimTest):$/;"	c
snipMate_Issue658	test/test_SnipMate.py	/^class snipMate_Issue658(_VimTest):$/;"	c
snipMate_MultiMatches	test/test_SnipMate.py	/^class snipMate_MultiMatches(_VimTest):$/;"	c
snipMate_NoNestedTabstops	test/test_SnipMate.py	/^class snipMate_NoNestedTabstops(_VimTest):$/;"	c
snipMate_OtherFiletype	test/test_SnipMate.py	/^class snipMate_OtherFiletype(_VimTest):$/;"	c
snipMate_OverwrittenByRegExpTrigger	test/test_SnipMate.py	/^class snipMate_OverwrittenByRegExpTrigger(_VimTest):$/;"	c
snipMate_SimpleSnippet	test/test_SnipMate.py	/^class snipMate_SimpleSnippet(_VimTest):$/;"	c
snipMate_SimpleSnippetInSnippetFile	test/test_SnipMate.py	/^class snipMate_SimpleSnippetInSnippetFile(_VimTest):$/;"	c
snipMate_SimpleSnippetSubDirectory	test/test_SnipMate.py	/^class snipMate_SimpleSnippetSubDirectory(_VimTest):$/;"	c
snipMate_TestMirrors	test/test_SnipMate.py	/^class snipMate_TestMirrors(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders	test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders_Overwrite	test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders_Overwrite(_VimTest):$/;"	c
snipMate_TestNoBraceTabstops	test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstops(_VimTest):$/;"	c
snipMate_TestNoBraceTabstopsAndMirrors	test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstopsAndMirrors(_VimTest):$/;"	c
snipMate_Visual_Simple	test/test_SnipMate.py	/^class snipMate_Visual_Simple(_VimTest):$/;"	c
snippet_end	pythonx/UltiSnips/text_objects/_python_code.py	/^    def snippet_end(self):$/;"	m	class:SnippetUtil
snippet_start	pythonx/UltiSnips/text_objects/_python_code.py	/^    def snippet_start(self):$/;"	m	class:SnippetUtil
snippets	test/test_Autocommands.py	/^    snippets = ('test', '[ ${1:foo} ]')$/;"	v	class:Autocommands
snippets	test/test_Chars.py	/^    snippets = ('trig', 'success')$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
snippets	test/test_Chars.py	/^    snippets = ('trig', 'success')$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
snippets	test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü $1')$/;"	v	class:Snippet_With_Umlauts_Mirrors
snippets	test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
snippets	test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
snippets	test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
snippets	test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
snippets	test/test_Chars.py	/^    snippets = ('ül', 'üüüüüßßßß')$/;"	v	class:Snippet_With_Umlauts_TypeOn
snippets	test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
snippets	test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
snippets	test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
snippets	test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
snippets	test/test_Chars.py	/^    snippets = _snip_quote('ü')$/;"	v	class:Snippet_With_Umlauts
snippets	test/test_Chars.py	/^    snippets = _snip_quote('ü')$/;"	v	class:Snippet_With_Umlauts_List
snippets	test/test_Completion.py	/^    snippets = ('test', '$1 $2')$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
snippets	test/test_Completion.py	/^    snippets = ('test', '$1 $2')$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
snippets	test/test_Completion.py	/^    snippets = ('test', '$1 ${1:blah}')$/;"	v	class:Completion_SimpleExample_ECR
snippets	test/test_Editing.py	/^    snippets = ($/;"	v	class:JumpForward_DefSnippet
snippets	test/test_Editing.py	/^    snippets = ('i', 'if $1:\\n\\t$2')$/;"	v	class:Undo_ChangesInPlaceholder
snippets	test/test_Editing.py	/^    snippets = ('i', 'if $1:\\n\\t$2')$/;"	v	class:Undo_CompletelyUndoSnippet
snippets	test/test_Editing.py	/^    snippets = ('i', 'if:\\n\\t$1')$/;"	v	class:Undo_RemoveOneSnippetByTime
snippets	test/test_Editing.py	/^    snippets = ('i', 'if:\\n\\t$1')$/;"	v	class:Undo_RemoveOneSnippetByTime2
snippets	test/test_Editing.py	/^    snippets = ('test', '$1 Hello\\naaa ${1} bbb\\nWorld')$/;"	v	class:Undo_RemoveEditInTabstop
snippets	test/test_Editing.py	/^    snippets = ('test', '$1hello\\nnice\\nworld')$/;"	v	class:DeleteLastTwoLinesInSnippet
snippets	test/test_Editing.py	/^    snippets = ('test', '${1:hello} $1')$/;"	v	class:DeleteSnippetInsertion0
snippets	test/test_Editing.py	/^    snippets = ('test', '${1:hi}\\n${2:world}\\nend')$/;"	v	class:DeleteCurrentTabStop2_JumpBack
snippets	test/test_Editing.py	/^    snippets = ('test', '${1:hi}\\n${2:world}\\nend')$/;"	v	class:DeleteCurrentTabStop3_JumpAround
snippets	test/test_Editing.py	/^    snippets = ('test', '${1:hi}\\nend')$/;"	v	class:DeleteCurrentTabStop1_JumpBack
snippets	test/test_Editing.py	/^    snippets = ('test', '${1:one}(${2:xxx})${3:three}')$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
snippets	test/test_Editing.py	/^    snippets = ('test', 'A${1:C} ${0:DDD}', 'This is Case 1')$/;"	v	class:Backspace_TabStop_Zero
snippets	test/test_Editing.py	/^    snippets = ('test', 'A${1:C} ${2:DDD}', 'This is Case 1')$/;"	v	class:Backspace_TabStop_NotZero
snippets	test/test_Editing.py	/^    snippets = ('test', 'Hello\\n${1:Hello}World')$/;"	v	class:Undo_RemoveWholeSnippet
snippets	test/test_Editing.py	/^    snippets = ('test', 'Hello\\naaa ${1} bbb\\nWorld')$/;"	v	class:Undo_RemoveMultilineSnippet
snippets	test/test_Editing.py	/^    snippets = ('test', r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
snippets	test/test_Editing.py	/^    snippets = ('test', r"if $1: $2")$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
snippets	test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt!')$/;"	v	class:_SimpleExpands
snippets	test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt!\\nUnd Wie gehts')$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
snippets	test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt!\\nUnd Wie gehts')$/;"	v	class:MultilineExpand_ExpectCorrectResult
snippets	test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt\\n')$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
snippets	test/test_Expand.py	/^    snippets = ('test', 'SimpleText')$/;"	v	class:ExitSnippetModeAfterTabstopZero
snippets	test/test_Fixes.py	/^    snippets = ('pd', 'padding: ${1:0}px')$/;"	v	class:VirtualEdit
snippets	test/test_Fixes.py	/^    snippets = ('test', '${1:hello} ${2:world} ${0}')$/;"	v	class:RetainsTheUnnamedRegister
snippets	test/test_Fixes.py	/^    snippets = ('test', '${1:hello} ${2:world} ${0}')$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
snippets	test/test_Fixes.py	/^    snippets = ('test', '${2:#2} ${1:#1};$0')$/;"	v	class:Bug1251994
snippets	test/test_Fixes.py	/^    snippets = ('test', '\\t${1}${0}')$/;"	v	class:ShiftWidthZero
snippets	test/test_Fixes.py	/^    snippets = ('test', 'hello')$/;"	v	class:NonUnicodeDataInUnnamedRegister
snippets	test/test_Folding.py	/^    snippets = ('fold',$/;"	v	class:FoldOverwrite_Simple_ECR
snippets	test/test_Folding.py	/^    snippets = ('fold',$/;"	v	class:Fold_DeleteMiddleLine_ECR
snippets	test/test_Format.py	/^    snippets = ($/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	test/test_Format.py	/^    snippets = ('m', '\\tBlaahblah \\t\\t  ')$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
snippets	test/test_Format.py	/^    snippets = ('test', '${1:longer expand}\\n$1\\n$0', '', 'f')$/;"	v	class:FOSimple_Break_ExpectCorrectResult
snippets	test/test_Format.py	/^    snippets = ('test', '${1:longer expand}after\\nstart$1end')$/;"	v	class:FOTextAfter_ExpectCorrectResult
snippets	test/test_Format.py	/^    snippets = ('test', '${1:longer expand}after\\nstart$1end')$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
snippets	test/test_Format.py	/^    snippets = ('test', 'Before${1:longer expand}After\\nstart$1end')$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
snippets	test/test_Format.py	/^    snippets = ('test', 'for\\n    blah')$/;"	v	class:ProperIndenting_SimpleCase_ECR
snippets	test/test_Format.py	/^    snippets = ('test', 'hui')$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
snippets	test/test_Format.py	/^    snippets = ('test', 'hui')$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
snippets	test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
snippets	test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
snippets	test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_CanOverwriteTabstop
snippets	test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
snippets	test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_OptExists
snippets	test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_OptNoExists
snippets	test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_TrickyReferences
snippets	test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
snippets	test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
snippets	test/test_Interpolation.py	/^    snippets = ($/;"	v	class:Python_WeirdScoping_Error
snippets	test/test_Interpolation.py	/^    snippets = ('test', 'Hallo ${1:now `echo fromecho`} end')$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	test/test_Interpolation.py	/^    snippets = ('test', 'Hallo ${1:now `echo fromecho`} end')$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	test/test_Interpolation.py	/^    snippets = ('test', 'h`!p snip.rv = snip.v.mode + snip.v.text`b')$/;"	v	class:PythonVisual_LineSelect_Simple
snippets	test/test_Interpolation.py	/^    snippets = ('test', 'h`!p snip.rv = snip.v.mode + snip.v.text`b')$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
snippets	test/test_Interpolation.py	/^    snippets = ('test', 'h`!p snip.rv = snip.v.mode + snip.v.text`b')$/;"	v	class:PythonVisual_SelectOneWord
snippets	test/test_Interpolation.py	/^    snippets = ('test', 'hi `echo hallo` you!')$/;"	v	class:TabStop_Shell_SimpleExample
snippets	test/test_Interpolation.py	/^    snippets = ('test', 'hi `echo hallo`\\nWeiter')$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	test/test_Interpolation.py	/^    snippets = ('test', 'hi `echo höüäh` you!')$/;"	v	class:TabStop_Shell_WithUmlauts
snippets	test/test_ListSnippets.py	/^    snippets = (('testblah', 'BLAAH', 'Say BLAH'),$/;"	v	class:_ListAllSnippets
snippets	test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
snippets	test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
snippets	test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
snippets	test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
snippets	test/test_Mirror.py	/^    snippets = 'test', 'welt${1:welt${2:welt}welt} $2'$/;"	v	class:Mirror_TestKillTabstop_Kill
snippets	test/test_Mirror.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '    $1\\n$1\\na$1b\\n$1\\ntest $1 mich')$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1 $1 $1 $1')$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1 $1 $1 $1')$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1 $1')$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1 $1')$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:replace me}')$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:replace me}')$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:this is it} $1')$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:this is it} $1')$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1 Hinten\\n$1')$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1 Hinten')$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1')$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1')$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1')$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1\\n$1')$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1\\n$1')$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1\\n${1:sometext}')$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1\\nVorne $1 Hinten')$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1\\nVorne $1')$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', '$1\\n\\n$1\\n\\n$1')$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ObenVorne $1 ObenHinten\\nVorne $1 Hinten')$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'Vorne $1 Hinten\\n$1')$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'Vorne $1\\n$1')$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1.h $1.c}\\ntest $1')$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1.h}')$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1}')$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1}')$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:snip} ${3:$1.h $2}')$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:snip} ${3:$1.h $2}')$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}')$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:blub} ${2:$1.h}')$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:blub} ${2:$1}')$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:default value} $1\\nanother: $1 mirror')$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:default value} $1\\nanother: $1 mirror')$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:defa}\\n$1')$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
snippets	test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:defa}\\n$1')$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
snippets	test/test_Movement.py	/^    snippets = ('<trh', '<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3')$/;"	v	class:CursorMovement_BS_InEditMode
snippets	test/test_Movement.py	/^    snippets = ('test', '${1:Hi}\\n${2:blub}')$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
snippets	test/test_Movement.py	/^    snippets = ('test', '${1:Hi}\\n${2:blub}')$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
snippets	test/test_Movement.py	/^    snippets = ('test', '${1:Some}')$/;"	v	class:IMMoving_CursorsKeys_ECR
snippets	test/test_Movement.py	/^    snippets = ('test', r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
snippets	test/test_Movement.py	/^    snippets = ('test', r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
snippets	test/test_Movement.py	/^    snippets = ('test', r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
snippets	test/test_Movement.py	/^    snippets = ('test', r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
snippets	test/test_Movement.py	/^    snippets = ('test', r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
snippets	test/test_Movement.py	/^    snippets = ('test', r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
snippets	test/test_Movement.py	/^    snippets = ('test', r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
snippets	test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
snippets	test/test_MultipleMatches.py	/^    snippets = (('test', 'Case1', 'This is Case 1'),$/;"	v	class:_MultipleMatches
snippets	test/test_Plugin.py	/^    snippets = ('long', 'Hello', '', 'w')$/;"	v	class:Plugin_SuperTab_SimpleTest
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStop_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInner_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_BackspaceZero_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero2_ECR
snippets	test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
snippets	test/test_Recursive.py	/^    snippets = ('m', 'M START\\n    $0\\nM END')$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
snippets	test/test_Recursive.py	/^    snippets = ('m', 'M START\\n    $1\\nM END -> $0')$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
snippets	test/test_Recursive.py	/^    snippets = ('m', 'M START\\n$0\\nM END')$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
snippets	test/test_Recursive.py	/^    snippets = ('m', 'M START\\n$0\\nM END')$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
snippets	test/test_Recursive.py	/^    snippets = ('m', 'M START\\n$0\\nM END')$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
snippets	test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
snippets	test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
snippets	test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
snippets	test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
snippets	test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
snippets	test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
snippets	test/test_Selection.py	/^    snippets = ('for',$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
snippets	test/test_Selection.py	/^    snippets = ('for',$/;"	v	class:OldSelection_RealWorldCase_Test
snippets	test/test_Selection.py	/^    snippets = ('test', '${1:World}')$/;"	v	class:_SelectModeMappings
snippets	test/test_Selection.py	/^    snippets = ('test', 'h${1:blah}w $1')$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
snippets	test/test_Selection.py	/^    snippets = ('test', 'h${1:blah}w $1')$/;"	v	class:OldSelection_SimpleTabstop_Test
snippets	test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	test/test_SnippetOptions.py	/^    snippets = ('((?<=\\W)|^)(\\.)', 'self.', '', 'r')$/;"	v	class:_Regex_Self
snippets	test/test_SnippetOptions.py	/^    snippets = ('(.*test)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
snippets	test/test_SnippetOptions.py	/^    snippets = ('(test *)+', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_Multiple
snippets	test/test_SnippetOptions.py	/^    snippets = ('(test)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_Expand
snippets	test/test_SnippetOptions.py	/^    snippets = ('(test)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
snippets	test/test_SnippetOptions.py	/^    snippets = ('(test.*)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
snippets	test/test_SnippetOptions.py	/^    snippets = ('hi',$/;"	v	class:_TabExpand_RealWorld
snippets	test/test_SnippetOptions.py	/^    snippets = ('test ', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_WithSpace
snippets	test/test_SnippetOptions.py	/^    snippets = ('test it', 'Expand me!', '', 'b')$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	test/test_SnippetOptions.py	/^    snippets = ('test it', 'Expand me!', '', 'b')$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	test/test_SnippetOptions.py	/^    snippets = ('test it', 'Expand me!', '', 'b')$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	test/test_SnippetOptions.py	/^    snippets = ('test me', 'Expand me!')$/;"	v	class:MultiWordSnippet_Simple
snippets	test/test_SnippetOptions.py	/^    snippets = ('test', 'Expand me!', '', 'b')$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	test/test_SnippetOptions.py	/^    snippets = ('test', 'Expand me!', '', 'b')$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	test/test_SnippetOptions.py	/^    snippets = ('test', 'Expand me!', '', 'b')$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	test/test_SnippetOptions.py	/^    snippets = ('test', '\\t\\tExpand\\tme!\\t', '', 't')$/;"	v	class:_No_Tab_Expand
snippets	test/test_SnippetOptions.py	/^    snippets = (('test it', 'Expand me!', '', 'i'), )$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	test/test_SnippetOptions.py	/^    snippets = (('test it', 'Expand me!', '', 'i'), )$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	test/test_SnippetOptions.py	/^    snippets = (('test it', 'Expand me!', '', 'w'), )$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
snippets	test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
snippets	test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
snippets	test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'w'), )$/;"	v	class:_SnippetOptions_ExpandWordSnippets
snippets	test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
snippets	test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
snippets	test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
snippets	test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
snippets	test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
snippets	test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteExisting
snippets	test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
snippets	test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
snippets	test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
snippets	test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
snippets	test/test_TabStop.py	/^    snippets = ('echo', '$0 run')$/;"	v	class:TabStop_Exit_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('echo', 'echo ${1:Hallo}')$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'Hallo ${1:WELT} ups')$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $0 $1')$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $0 a small feed')$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work')$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $2 $1')$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $2 $1')$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${0:End} ${1:Beginning}')$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${0:End} a small feed')$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${1:End} ${0:Beginning}')$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${2:End} mitte ${1:Beginning}')$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${2:End} mitte${1:Beginning}')$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('hallo', 'nothing ${1:i} hups')$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('test', "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
snippets	test/test_TabStop.py	/^    snippets = ('test', "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
snippets	test/test_TabStop.py	/^    snippets = ('test', "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
snippets	test/test_TabStop.py	/^    snippets = ('test', '[ $1$2 ] $1')$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('test', '\\\\${1:literal}')$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
snippets	test/test_TabStop.py	/^    snippets = ('test', '\\n\\\\${1:literal}')$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
snippets	test/test_TabStop.py	/^    snippets = ('test', 'each_byte { |${1:byte}| $0 }')$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world')$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi $1 ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi $1 ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_Leave
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_Overwrite
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second ${3:third}}} $4')$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second ${3:third}}} $4')$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second ${3:third}}} $4')$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second}} $2')$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second}} $2')$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
snippets	test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second}} $2')$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
snippets	test/test_TabStop.py	/^    snippets = ('test', 'snip $1')$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
snippets	test/test_TabStop.py	/^    snippets = ('test', 'snip ${1:default}')$/;"	v	class:TabStopEscapingWhenSelected_ECR
snippets	test/test_TabStop.py	/^    snippets = ('test', 'snip ${1:i}')$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
snippets	test/test_TabStop.py	/^    snippets = ('test', 't$1t${2: }t{\\n\\t$0\\n}')$/;"	v	class:TabStop_CROnlyOnSelectedNear
snippets	test/test_TabStop.py	/^    snippets = ('test', r":latex:\\`$1\\`$0")$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
snippets	test/test_TabStop.py	/^    snippets = ('test', r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
snippets	test/test_TabStop.py	/^    snippets = ('test', r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
snippets	test/test_TabStop.py	/^    snippets = ('test', r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
snippets	test/test_TabStop.py	/^    snippets = ('test', r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
snippets	test/test_TabStop.py	/^    snippets = ('test', r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
snippets	test/test_TabStop.py	/^    snippets = ('test', r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
snippets	test/test_TabStop.py	/^    snippets = ('test', r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
snippets	test/test_TabStop.py	/^    snippets = ('test', r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
snippets	test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/(aa)|.*\/(?1:yes:no\\\\)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
snippets	test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/(aa)|.*\/(?1:yes\\:no\\))\/}"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
snippets	test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/(aa)|.*\/(?1:yes\\\\:no)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
snippets	test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
snippets	test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
snippets	test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
snippets	test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
snippets	test/test_Transformation.py	/^    snippets = ('ascii', '$1 ${1\/(.*)\/$1\/a}')$/;"	v	class:Transformation_SimpleCaseAsciiResult
snippets	test/test_Transformation.py	/^    snippets = ('ascii', '$1 ${1\/(.*)\/\\L$1\\E\/a}')$/;"	v	class:Transformation_LowerCaseAsciiResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.)\/\\\\u$1\/}')$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.*)\/\\L$1\\E\/}')$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.*)\/\\\\U$1\\E\/}')$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.*)\/\\l$1\/}')$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}')$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}')$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/([ab])oo\/$1ull\/}')$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(^a).*\/(?0:began with an a)\/}')$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/foo\/batzl\/}')$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/foo\/batzl\/}')$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}')$/;"	v	class:Transformation_MultipleTransformations_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1:some}')$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1:some}')$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1}')$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1}')$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', '${1\/foo\/batzl\/} $1')$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', '${1\/foo\/batzl\/} ${1:replace me}')$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:m1)\/} ${2\/.+\/(?0:m2)\/} '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:m1)\/} ${2\/.+\/(?0:m2)\/} '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:matched)\/} ${1:default}')$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:matched)\/} ${1:default}')$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
snippets	test/test_Transformation.py	/^    snippets = ('test', r"${VISUAL\/^\/* \/mg}")$/;"	v	class:Transformation_OptionMultiline_ECR
snippets	test/test_UltiSnipFunc.py	/^    snippets = ("te'stâ", 'abc123ά', '123êabc')$/;"	v	class:VerifyVimDict3
snippets	test/test_UltiSnipFunc.py	/^    snippets = ('te"stâ', 'abc123ά', '123êabc')$/;"	v	class:VerifyVimDict2
snippets	test/test_UltiSnipFunc.py	/^    snippets = ('testme',$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
snippets	test/test_UltiSnipFunc.py	/^    snippets = ('testme',$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
snippets	test/test_UltiSnipFunc.py	/^    snippets = ('testme',$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
snippets	test/test_UltiSnipFunc.py	/^    snippets = ('testâ', 'abc123ά', '123\\'êabc')$/;"	v	class:VerifyVimDict1
snippets	test/test_Visual.py	/^    snippets = ('if', 'if {\\n\\t${VISUAL}$0\\n}')$/;"	v	class:Visual_LineSelect_DedentLine
snippets	test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${0:${VISUAL}}\\nend')$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
snippets	test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend')$/;"	v	class:Visual_LineSelect_WithTabStop
snippets	test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${VISUAL}\\nend')$/;"	v	class:Visual_LineSelect_CheckIndentSimple
snippets	test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${VISUAL}\\nend')$/;"	v	class:Visual_LineSelect_CheckIndentTwice
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${1:${VISUAL}}b')$/;"	v	class:Visual_InDefaultText_SelectOneWord
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${1:${VISUAL}}b')$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${1:bef${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${1:bef${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${1:beforea${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${1:beforea${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${1:beforeaaa${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${2:ahh}${VISUAL}${1:ups}b', 'Description', 'i')$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL:world}b')$/;"	v	class:VisualWithDefault_ExpandWithVisual
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL:world}b')$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b${VISUAL}a')$/;"	v	class:Visual_SelectOneWord_TwiceVisual
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_CrossOneLine
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_ExpandTwice
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_LineSelect_Simple
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_NoVisualSelection_Ignore
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_SelectOneWord
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', '', 'i')$/;"	v	class:Visual_SelectOneWordExclusive
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', '', 'i')$/;"	v	class:Visual_SelectOneWordInclusive
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', '', 'i')$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', 'Description', 'i')$/;"	v	class:Visual_SelectOneWord_Inword
snippets	test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', 'Description', 'i')$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
snippets	test/test_Visual.py	/^    snippets = ('test', 'hello\\n\\t ${1:${VISUAL}}\\nend')$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
snippets	test/test_Visual.py	/^    snippets = ('test', r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
snippets	test/test_Visual.py	/^    snippets = ('test', r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
snippets	test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
snippets	test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
snippets	test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
snippets	test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
snippets	test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
snippets	test/vim_test_case.py	/^    snippets = ()$/;"	v	class:VimTestCase
snippets_in_current_scope	pythonx/UltiSnips/snippet_manager.py	/^    def snippets_in_current_scope(self, searchAll):$/;"	m	class:SnippetManager
source.gather_candidates	autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context)$/;"	f
spaces_to_indent	pythonx/UltiSnips/indent_util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
split_at_whitespace	pythonx/UltiSnips/snippet/definition/_base.py	/^def split_at_whitespace(string):$/;"	f
start	pythonx/UltiSnips/text_objects/_base.py	/^    def start(self):$/;"	m	class:TextObject
starts_here	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:MirrorToken
starts_here	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:PythonCodeToken
starts_here	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ShellCodeToken
starts_here	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TabStopToken
starts_here	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TransformationToken
starts_here	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VimLCodeToken
starts_here	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VisualToken
starts_here	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream, chars=r'{}\\$`'):$/;"	m	class:EscapeCharToken
steps	pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSameLine
steps	pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSameLine1
steps	pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine
steps	pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
steps	pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
steps	pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine2
suspend_proxy_edits	pythonx/UltiSnips/buffer_proxy.py	/^def suspend_proxy_edits():$/;"	f
tearDown	test/vim_test_case.py	/^    def tearDown(self):$/;"	m	class:VimTestCase
text	pythonx/UltiSnips/vim_state.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text_after	test/test_Format.py	/^    text_after = ''$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_after	test/vim_test_case.py	/^    text_after = '\\n\\n --- some text after --- '$/;"	v	class:VimTestCase
text_before	test/test_Format.py	/^    text_before = ''$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_before	test/vim_test_case.py	/^    text_before = ' --- some text before --- \\n\\n'$/;"	v	class:VimTestCase
to_vim	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
to_vim_cursor	pythonx/UltiSnips/snippet/definition/_base.py	/^    def to_vim_cursor(self):$/;"	m	class:_SnippetUtilCursor
tokenize	pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def tokenize(text, indent, offset, allowed_tokens):$/;"	f
tokenize_snippet_text	pythonx/UltiSnips/snippet/parsing/_base.py	/^def tokenize_snippet_text(snippet_instance, text, indent,$/;"	f
transform	pythonx/UltiSnips/test_diff.py	/^def transform(a, cmds):$/;"	f
trigger	pythonx/UltiSnips/snippet/definition/_base.py	/^    def trigger(self):$/;"	m	class:SnippetDefinition
ultisnips_snippets	ftplugin/snippets.vim	/^augroup ultisnips_snippets.vim$/;"	a
unescape	pythonx/UltiSnips/text.py	/^def unescape(text):$/;"	f
unescape	utils/get_tm_snippets.py	/^def unescape(s):$/;"	f
unique_name_temp	test/vim_interface.py	/^    def unique_name_temp(self, suffix='', prefix=''):$/;"	m	class:TempFileManager
unite#sources#ultisnips#define	autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define()$/;"	f
unite_source.action_table.expand.func	autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate)$/;"	f
unite_source.action_table.preview.func	autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate)$/;"	f
unite_source.gather_candidates	autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context)$/;"	f
unite_source.get_longest_snippet_len	autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.get_longest_snippet_len(snippet_list)$/;"	f
unite_source.hooks.on_syntax	autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.hooks.on_syntax(args, context) abort$/;"	f
unregister_snippet_source	pythonx/UltiSnips/snippet_manager.py	/^    def unregister_snippet_source(self, name):$/;"	m	class:SnippetManager
unshift	pythonx/UltiSnips/text_objects/_python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
update_extends	pythonx/UltiSnips/snippet/source/_base.py	/^    def update_extends(self, child_ft, parent_fts):$/;"	m	class:SnippetSource
update_textobjects	pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def update_textobjects(self, buf):$/;"	m	class:SnippetInstance
use_proxy_buffer	pythonx/UltiSnips/buffer_proxy.py	/^def use_proxy_buffer(snippets_stack, vstate):$/;"	f
v	pythonx/UltiSnips/text_objects/_python_code.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
validate_buffer	pythonx/UltiSnips/buffer_proxy.py	/^    def validate_buffer(self):$/;"	m	class:VimBufferProxy
version	test/vim_test_case.py	/^    version = None  # Will be set to vim --version output$/;"	v	class:VimTestCase
vim_executable	test/vim_interface.py	/^    def vim_executable(self):$/;"	m	class:VimInterface
vim_flavor	test/vim_test_case.py	/^    vim_flavor = None # will be 'vim' or 'neovim'.$/;"	v	class:VimTestCase
virtual_position	pythonx/UltiSnips/_vim.py	/^def virtual_position(line, col):$/;"	f
wait_until_file_exists	test/vim_interface.py	/^def wait_until_file_exists(file_path, times=None, interval=0.01):$/;"	f
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MatchIsTooCheap
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCheapDelete
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCommonCharacters
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCrash
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_BackspaceOneChar
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_DeleteOneChar
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_InsertOneChar
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_InsertOneChar1
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestNoSubstring
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestRealLife
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestRealLife1
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestUltiSnipsProblem
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
wanted	pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
wanted	test/test_AnonymousExpansion.py	/^    wanted = ' :latex:`Hello`World'$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	test/test_AnonymousExpansion.py	/^    wanted = '123 simple 123 expand 123 456'$/;"	v	class:Anon_Trigger_Multi
wanted	test/test_AnonymousExpansion.py	/^    wanted = ':latex:`Hello`World'$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	test/test_AnonymousExpansion.py	/^    wanted = 'abc simple expand'$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	test/test_AnonymousExpansion.py	/^    wanted = 'abcsimple 123 expand 123 456'$/;"	v	class:Anon_NoTrigger_Multi
wanted	test/test_AnonymousExpansion.py	/^    wanted = 'abcsimple expand'$/;"	v	class:Anon_NoTrigger_Simple
wanted	test/test_AnonymousExpansion.py	/^    wanted = 'simple expand'$/;"	v	class:Anon_Trigger_Opts
wanted	test/test_AnonymousExpansion.py	/^    wanted = 'simple expand'$/;"	v	class:Anon_Trigger_Simple
wanted	test/test_AnonymousExpansion.py	/^    wanted = 'simple expand\\nabc' + EX$/;"	v	class:Anon_Trigger_Twice
wanted	test/test_Autocommands.py	/^    wanted = '[ [ bar ] ] done M1U1'$/;"	v	class:Autocommands
wanted	test/test_Autotrigger.py	/^    wanted = 'abc'$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
wanted	test/test_Autotrigger.py	/^    wanted = 'autotriggered'$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
wanted	test/test_Autotrigger.py	/^    wanted = 'autotriggered'$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
wanted	test/test_Autotrigger.py	/^    wanted = 'autotriggered\\na'$/;"	v	class:Autotrigger_CanMatchContext
wanted	test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
wanted	test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	test/test_Chars.py	/^    wanted = "Expand me\\"!"$/;"	v	class:Snippet_With_DoubleQuote
wanted	test/test_Chars.py	/^    wanted = "Expand me\\"!"$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	test/test_Chars.py	/^    wanted = 'Expand meü!'$/;"	v	class:Snippet_With_Umlauts
wanted	test/test_Chars.py	/^    wanted = 'Expand meü!'$/;"	v	class:Snippet_With_Umlauts_List
wanted	test/test_Chars.py	/^    wanted = 'oouu success b'$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
wanted	test/test_Chars.py	/^    wanted = 'te üü hello üü hello'$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	test/test_Chars.py	/^    wanted = 'te üü hüüll üü aaaaa'$/;"	v	class:Snippet_With_Umlauts_Python
wanted	test/test_Chars.py	/^    wanted = 'te üü more text üü helloßß\\nüüüüend'$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	test/test_Chars.py	/^    wanted = 'te üü world üü helloßß\\nüüüüend'$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	test/test_Chars.py	/^    wanted = 'te üü world üü more textßß\\nüüüüend'$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	test/test_Chars.py	/^    wanted = 'te üüüüüßßßßmore text'$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	test/test_Chars.py	/^    wanted = 'ööuu success b'$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
wanted	test/test_Completion.py	/^        'superkallifragilistik some more'$/;"	v	class:Completion_SimpleExample_ECR
wanted	test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + 'completion1 foo'$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + 'foo completion1'$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	test/test_ContextSnippets.py	/^    wanted = "(2, 1)"$/;"	v	class:ContextSnippets_CursorIsZeroBased
wanted	test/test_ContextSnippets.py	/^    wanted = "1 1"$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
wanted	test/test_ContextSnippets.py	/^    wanted = "Yes No"$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
wanted	test/test_ContextSnippets.py	/^    wanted = 'abc'$/;"	v	class:ContextSnippets_ExpandOnTrue
wanted	test/test_ContextSnippets.py	/^    wanted = 'abc'$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
wanted	test/test_ContextSnippets.py	/^    wanted = 'abc'$/;"	v	class:ContextSnippets_SimpleSnippet
wanted	test/test_ContextSnippets.py	/^    wanted = 'b'$/;"	v	class:ContextSnippets_PriorityKeyword
wanted	test/test_ContextSnippets.py	/^    wanted = 'e' + EX$/;"	v	class:ContextSnippets_ReportError
wanted	test/test_ContextSnippets.py	/^    wanted = 'e' + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
wanted	test/test_ContextSnippets.py	/^    wanted = '{ < a > }'$/;"	v	class:ContextSnippets_UseContext
wanted	test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
wanted	test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
wanted	test/test_Editing.py	/^    wanted = ''$/;"	v	class:Undo_CompletelyUndoSnippet
wanted	test/test_Editing.py	/^    wanted = 'AA BBB'$/;"	v	class:Backspace_TabStop_NotZero
wanted	test/test_Editing.py	/^    wanted = 'AA BBB'$/;"	v	class:Backspace_TabStop_Zero
wanted	test/test_Editing.py	/^    wanted = 'a b c\\na\\nb\\nc\\n\\nshallnot'$/;"	v	class:JumpForward_DefSnippet
wanted	test/test_Editing.py	/^    wanted = 'aaaaa()3333'$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
wanted	test/test_Editing.py	/^    wanted = 'end'$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	test/test_Editing.py	/^    wanted = 'first line\\n\\n\\ntest\\n\\n\\nthird line'$/;"	v	class:Undo_RemoveWholeSnippet
wanted	test/test_Editing.py	/^    wanted = 'hello upsi Hello\\naaa upsi bbb\\nWorld'$/;"	v	class:Undo_RemoveEditInTabstop
wanted	test/test_Editing.py	/^    wanted = 'hello'$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	test/test_Editing.py	/^    wanted = 'hello\\nend'$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	test/test_Editing.py	/^    wanted = 'hello\\nendworld'$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	test/test_Editing.py	/^    wanted = 'if :\\n\\t'$/;"	v	class:Undo_ChangesInPlaceholder
wanted	test/test_Editing.py	/^    wanted = 'if a: test'$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
wanted	test/test_Editing.py	/^    wanted = 'if:\\n\\t'$/;"	v	class:Undo_RemoveOneSnippetByTime2
wanted	test/test_Editing.py	/^    wanted = 'if:\\n\\ti'$/;"	v	class:Undo_RemoveOneSnippetByTime
wanted	test/test_Editing.py	/^    wanted = 'test'$/;"	v	class:DeleteSnippetInsertion1
wanted	test/test_Editing.py	/^    wanted = 'test'$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	test/test_Editing.py	/^    wanted = 'world'$/;"	v	class:DeleteSnippetInsertion0
wanted	test/test_Expand.py	/^    wanted = 'Hallo Welt!'$/;"	v	class:SimpleExpand_ExpectCorrectResult
wanted	test/test_Expand.py	/^    wanted = 'Hallo Welt!\\nHallo We'$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
wanted	test/test_Expand.py	/^    wanted = 'Hallo Welt!\\nHallo Welt!'$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
wanted	test/test_Expand.py	/^    wanted = 'Hallo Welt!and again'$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
wanted	test/test_Expand.py	/^    wanted = 'Hallo Welt\\n\\nAnd more'$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
wanted	test/test_Expand.py	/^    wanted = 'SimpleText' + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	test/test_Expand.py	/^    wanted = 'Wie Hallo Welt! gehts'$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
wanted	test/test_Expand.py	/^    wanted = 'Wie Hallo Welt!\\nUnd Wie gehts gehts'$/;"	v	class:MultilineExpand_ExpectCorrectResult
wanted	test/test_Expand.py	/^    wanted = 'Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts'$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
wanted	test/test_Expand.py	/^    wanted = 'hallo ' + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
wanted	test/test_Expand.py	/^    wanted = 'na du Hallo Welt!and blub'$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
wanted	test/test_Fixes.py	/^    wanted = '  world hello;blub'$/;"	v	class:Bug1251994
wanted	test/test_Fixes.py	/^    wanted = '\\nblah\\nhello world '$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
wanted	test/test_Fixes.py	/^    wanted = '\\t\\t\\tpadding: 2px'$/;"	v	class:VirtualEdit
wanted	test/test_Fixes.py	/^    wanted = '\\tfoo'$/;"	v	class:ShiftWidthZero
wanted	test/test_Fixes.py	/^    wanted = 'hello'$/;"	v	class:NonUnicodeDataInUnnamedRegister
wanted	test/test_Fixes.py	/^    wanted = 'yank HELLO world yank'$/;"	v	class:RetainsTheUnnamedRegister
wanted	test/test_Folding.py	/^    wanted = '# hi  {{{\\n\\n# End: hi  }}}'$/;"	v
wanted	test/test_Folding.py	/^    wanted = 'package c03;\\nsub junk {}\\n1;'$/;"	v
wanted	test/test_Format.py	/^        'end'$/;"	v	class:FOSimple_Break_ExpectCorrectResult
wanted	test/test_Format.py	/^    wanted = '    for\\n        blahHui'$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	test/test_Format.py	/^    wanted = '    hui\\n    blah'$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	test/test_Format.py	/^    wanted = '    huiblah'$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	test/test_Format.py	/^    wanted = '   Blaahblah \\t\\t  '$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	test/test_Format.py	/^    wanted = '   Something\\n        Hallo'$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	test/test_Format.py	/^    wanted = '#include <cstdlib>'$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	test/test_Format.py	/^    wanted = '#include <foo>'$/;"	v
wanted	test/test_Interpolation.py	/^    wanted = "bl-\\n\\tah, bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
wanted	test/test_Interpolation.py	/^    wanted = '    hi 4 End'$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	test/test_Interpolation.py	/^    wanted = '    start b isbigger a end'$/;"	v	class:PythonCodeOld_IndentedMultiline
wanted	test/test_Interpolation.py	/^    wanted = '    start b isbigger a end'$/;"	v	class:PythonCode_MultilineIndented
wanted	test/test_Interpolation.py	/^    wanted = '##########\\nHallo Welt'$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	test/test_Interpolation.py	/^    wanted = '##########\\nHallo Welt'$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	test/test_Interpolation.py	/^    wanted = '$hi'$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	test/test_Interpolation.py	/^    wanted = 'Hallo now Hallo Welt endand more'$/;"	v
wanted	test/test_Interpolation.py	/^    wanted = 'Hallo now fromecho endand more'$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	test/test_Interpolation.py	/^    wanted = 'Hallo overwrite endand more'$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	test/test_Interpolation.py	/^    wanted = 'OKAYhokayoOKAY'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	test/test_Interpolation.py	/^    wanted = 'aaa'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	test/test_Interpolation.py	/^    wanted = 'blah'$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	test/test_Interpolation.py	/^    wanted = 'egal Hallo End'$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
wanted	test/test_Interpolation.py	/^    wanted = 'egal Hallo End'$/;"	v	class:PythonCode_TransformedBeforeMultiLine
wanted	test/test_Interpolation.py	/^    wanted = 'h5b'$/;"	v	class:Python_WeirdScoping_Error
wanted	test/test_Interpolation.py	/^    wanted = 'hVhello\\nnice\\nworld\\nb'$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	test/test_Interpolation.py	/^    wanted = 'hbabc'$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	test/test_Interpolation.py	/^    wanted = 'hi Hallo End'$/;"	v	class:PythonCodeOld_SimpleExample
wanted	test/test_Interpolation.py	/^    wanted = 'hi Hallo End'$/;"	v	class:PythonCode_SimpleExample
wanted	test/test_Interpolation.py	/^    wanted = 'hi Hallo1\\nHallo2 End'$/;"	v	class:PythonCode_SimpleAppend
wanted	test/test_Interpolation.py	/^    wanted = 'hi Hallo1\\nHallo2\\nHallo3 End'$/;"	v	class:PythonCode_MultiAppend
wanted	test/test_Interpolation.py	/^    wanted = 'hi New End'$/;"	v	class:PythonCode_UseNewOverOld
wanted	test/test_Interpolation.py	/^    wanted = 'hi hallo you!and more'$/;"	v	class:TabStop_Shell_SimpleExample
wanted	test/test_Interpolation.py	/^    wanted = 'hi hallo\\nWeiterand more'$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	test/test_Interpolation.py	/^    wanted = 'hi höüäh you!and more'$/;"	v	class:TabStop_Shell_WithUmlauts
wanted	test/test_Interpolation.py	/^    wanted = 'hi' + 100 * 'a' + 'endups'$/;"	v	class:PythonCode_LongerTextThanSource_Chars
wanted	test/test_Interpolation.py	/^    wanted = 'hi' + 100 * 'a' + 100 * '\\n' + 100 * 'a' + 'endups'$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
wanted	test/test_Interpolation.py	/^    wanted = 'hiEnd'$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	test/test_Interpolation.py	/^    wanted = 'ho ho.blah End'$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	test/test_Interpolation.py	/^    wanted = 'ho ho.blah End'$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	test/test_Interpolation.py	/^    wanted = 'hvblablubb'$/;"	v	class:PythonVisual_SelectOneWord
wanted	test/test_Interpolation.py	/^    wanted = 'ups egal hi hi'$/;"	v	class:PythonCode_TrickyReferences
wanted	test/test_ListSnippets.py	/^    wanted = ' BLAAH'$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
wanted	test/test_ListSnippets.py	/^    wanted = 'BLAAH'$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
wanted	test/test_ListSnippets.py	/^    wanted = 'hallo BLAAH'$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
wanted	test/test_ListSnippets.py	/^    wanted = 'hallo TEST ONE'$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
wanted	test/test_ListSnippets.py	/^    wanted = 'hallo qualleHi'$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
wanted	test/test_ListSnippets.py	/^    wanted = '} BLAAH'$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
wanted	test/test_Mirror.py	/^        ' hallo du\\nwie gehts'$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = '    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich'$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten'$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'Vorne hallo test Hinten\\nhallo test'$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'Vorne hallo\\nhallo'$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'a a a'$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha blah hi hulla end hu hi hub hulla'$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha blub blub'$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha blub blub.h'$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha defa\\ndefa'$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha default value default value\\nanother: default value mirror'$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha stdin do snap stdin.h do snap'$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha stdin overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha stdin overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha stdin snip stdin.h snip'$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha stdin stdin.h stdin.c\\ntest stdin'$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha stdin stdinend'$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha world world\\nanother: world mirror'$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ha world\\nworld'$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hal\\nhal'$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'halhups\\nhalhups'$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah'$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hallo Hinten\\nhallo'$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hallo du hallo du hallo du hallo du'$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hallo foo hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	test/test_Mirror.py	/^    wanted = 'hallo foo hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	test/test_Mirror.py	/^    wanted = 'hallo hallo'$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hallo noauch ahiuch_end'$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	test/test_Mirror.py	/^    wanted = 'hallo noauch auchih_end'$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	test/test_Mirror.py	/^    wanted = 'hallo noauch hinoauch_end'$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	test/test_Mirror.py	/^    wanted = 'hallo noauch noauchab_end'$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	test/test_Mirror.py	/^    wanted = 'hallo welt\\nVorne hallo welt Hinten'$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hallo weltelt '$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	test/test_Mirror.py	/^    wanted = 'hallo\\nVorne hallo'$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hallo\\nagain\\nhallo\\nagain'$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	test/test_Mirror.py	/^    wanted = 'hallo\\nhallo Hinten'$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'hallo\\nhallo'$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'this is it this is it this is it'$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
wanted	test/test_Mirror.py	/^    wanted = 'ups hallo hallo blah'$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
wanted	test/test_Movement.py	/^        'this is something\\nvery nice\\nnotmore text'$/;"	v	class:CursorMovement_Multiline_ECR
wanted	test/test_Movement.py	/^    wanted = '<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend'$/;"	v	class:CursorMovement_BS_InEditMode
wanted	test/test_Movement.py	/^    wanted = 'hello tab blub tab ' + JF + 'hallothis'$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	test/test_Movement.py	/^    wanted = 'hello tab hallo tab this'$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	test/test_Movement.py	/^    wanted = 'hello tab hallo tab this'$/;"	v	class:IMMoving_NoExiting_ECR
wanted	test/test_Movement.py	/^    wanted = 'hello tab hallo this'$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	test/test_Movement.py	/^    wanted = 'hello tab\\nblub this\\n' + JF + 'testhallo'$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	test/test_Movement.py	/^    wanted = 'hello' + JF + 'hallo tab blub this'$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	test/test_Movement.py	/^    wanted = 'text'$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	test/test_Movement.py	/^    wanted = 'thhallo\\nweltis thhallo\\nweltis'$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	test/test_Movement.py	/^    wanted = JF + 'hallo\\nhello tab\\nblub this'$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	test/test_MultipleMatches.py	/^    wanted = 'Case1'$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	test/test_MultipleMatches.py	/^    wanted = 'Case2'$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	test/test_MultipleMatches.py	/^    wanted = 'Case2'$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	test/test_MultipleMatches.py	/^    wanted = 'testhi'$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	test/test_MultipleMatches.py	/^    wanted = 'testhi'$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	test/test_MultipleMatches.py	/^    wanted = 'testhi'$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	test/test_ParseSnippets.py	/^    wanted = 'This is a test snippet!'$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	test/test_ParseSnippets.py	/^    wanted = 'This is a test.'$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	test/test_ParseSnippets.py	/^    wanted = 'This is a test.'$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	test/test_ParseSnippets.py	/^    wanted = 'This is a test.'$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	test/test_ParseSnippets.py	/^    wanted = 'This is another test.'$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	test/test_ParseSnippets.py	/^    wanted = 'This is yet another test.'$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	test/test_ParseSnippets.py	/^    wanted = 'abc az test'$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	test/test_ParseSnippets.py	/^    wanted = 'foo-bar test bar\\t\\nfoo-bar test'$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	test/test_ParseSnippets.py	/^    wanted = 're-test'$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
wanted	test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
wanted	test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	test/test_ParseSnippets.py	/^    wanted = 'toclear' + EX + '\\n' + 'This is a test.'$/;"	v	class:ParseSnippets_ClearOne
wanted	test/test_ParseSnippets.py	/^    wanted = 'toclear' + EX + '\\n' + 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	test/test_ParseSnippets.py	/^    wanted = 'x a bob b y\\nx a jon b y'$/;"	v	class:ParseSnippets_Global_Python
wanted	test/test_ParseSnippets.py	/^    wanted = 'x first a bob b y'$/;"	v	class:ParseSnippets_Global_Local_Python
wanted	test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippet
wanted	test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
wanted	test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
wanted	test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
wanted	test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
wanted	test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktrace
wanted	test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
wanted	test/test_Plugin.py	/^    wanted = 'longtextlongtext\\nlongtextlongtext\\nHello'$/;"	v	class:Plugin_SuperTab_SimpleTest
wanted	test/test_Recursive.py	/^        'M END -> end'$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	test/test_Recursive.py	/^    wanted = 'A A AB B C CD D DE E B hi'$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	test/test_Recursive.py	/^    wanted = 'A A C CD D DE E B again B hi'$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	test/test_Recursive.py	/^    wanted = 'A C CD D DE E B hi'$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	test/test_Recursive.py	/^    wanted = 'A C CD D DE E B'$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	test/test_Recursive.py	/^    wanted = 'A C CD D DE E B'$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	test/test_Recursive.py	/^    wanted = 'M START\\n    M START\\n        hi\\n    M END\\nM END'$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	test/test_Recursive.py	/^    wanted = 'M START\\n    M START\\n    hi\\n    M END\\nM END'$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	test/test_Recursive.py	/^    wanted = 'M START\\n    hallo M START\\n    hi\\n    M END\\nM END'$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	test/test_Recursive.py	/^    wanted = 'M START\\nM START\\n\\nM END\\nM END'$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend'$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ JST  JSThi ]end'$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ JST JSThi  two ]end'$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ Just some Texthi  two ]end'$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ [ [ a sec ] hallo ]ups world ]end'$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ [ [ a sec ] sec ] hallo ]end'$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ [ a hallo ]ups world ]end'$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ [ a sec ] hallo ]world'$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ [ hello  sec ]  world ]end'$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
wanted	test/test_Recursive.py	/^    wanted = '[ [ hello  world ]  sec ]end'$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
wanted	test/test_Recursive.py	/^    wanted = '[ [ hello  world ]ups  end ]'$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
wanted	test/test_Recursive.py	/^    wanted = '[ [ one three three two ] four ]end'$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ [ one three two ] four ]end'$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	test/test_Recursive.py	/^    wanted = '[ hello [ hi  two ]ups  three ]end'$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
wanted	test/test_Recursive.py	/^    wanted = '[ hello\\n[ hi  two ]ups  three ]end'$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
wanted	test/test_Recursive.py	/^    wanted = '[ hello\\nhello again [ hi  two ]ups  three ]end'$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	test/test_Recursive.py	/^    wanted = 'form_for user, namespace: some_namespace, html: {(id: |class: |title:  )d: '$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
wanted	test/test_Recursive.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	test/test_Recursive.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	test/test_Recursive.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
wanted	test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:_SelectModeMappings
wanted	test/test_Selection.py	/^    wanted = 'huiw ui'$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	test/test_Selection.py	/^    wanted = 'huiw ui'$/;"	v	class:OldSelection_SimpleTabstop_Test
wanted	test/test_Selection.py	/^    wanted = 'xello'$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	test/test_Selection.py	/^    wanted = 'xello'$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	test/test_Selection.py	/^    wanted = 'xello'$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	test/test_SnipMate.py	/^    wanted = 'This is a stand alone snippet\\nThis is two stand alone snippet\\nThree'$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
wanted	test/test_SnipMate.py	/^    wanted = 'This is a test snippet'$/;"	v	class:snipMate_SimpleSnippetSubDirectory
wanted	test/test_SnipMate.py	/^    wanted = 'This is a test snippet\\n# With a comment'$/;"	v	class:snipMate_SimpleSnippet
wanted	test/test_SnipMate.py	/^    wanted = 'blah'$/;"	v	class:snipMate_Extends
wanted	test/test_SnipMate.py	/^    wanted = 'blub is blah'$/;"	v	class:snipMate_TestNoBraceTabstops
wanted	test/test_SnipMate.py	/^    wanted = 'blub is blub, blah is blah'$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
wanted	test/test_SnipMate.py	/^    wanted = 'blub\\n\\nblah\\n'$/;"	v	class:snipMate_EmptyLinesContinueSnippets
wanted	test/test_SnipMate.py	/^    wanted = 'for (j; j < blub; blub++) {\\n\\thi\\n}'$/;"	v	class:snipMate_TestMirrors
wanted	test/test_SnipMate.py	/^    wanted = 'h$${2:blub}$$hi'$/;"	v	class:snipMate_NoNestedTabstops
wanted	test/test_SnipMate.py	/^    wanted = 'hblablubb'$/;"	v	class:snipMate_Visual_Simple
wanted	test/test_SnipMate.py	/^    wanted = 'hello' + EX + '\\nworked'$/;"	v	class:snipMate_OtherFiletype
wanted	test/test_SnipMate.py	/^    wanted = 'hello' + EX$/;"	v	class:snipMate_Disabled
wanted	test/test_SnipMate.py	/^    wanted = 'lac03lu'$/;"	v	class:snipMate_Interpolation
wanted	test/test_SnipMate.py	/^    wanted = 'laöäülu'$/;"	v	class:snipMate_InterpolationWithSystem
wanted	test/test_SnipMate.py	/^    wanted = 'two'$/;"	v	class:snipMate_MultiMatches
wanted	test/test_SnipMate.py	/^    wanted = 'ultisnips'$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
wanted	test/test_SnippetActions.py	/^    wanted = '1: 1\\n2'$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
wanted	test/test_SnippetActions.py	/^    wanted = '[(1)2'$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
wanted	test/test_SnippetActions.py	/^    wanted = '\\nabc'$/;"	v	class:SnippetActions_PreActionModifiesBuffer
wanted	test/test_SnippetActions.py	/^    wanted = 'abc\\n'$/;"	v	class:SnippetActions_PostActionModifiesBuffer
wanted	test/test_SnippetActions.py	/^    wanted = 'def123'$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
wanted	test/test_SnippetOptions.py	/^    wanted = '   Expand me!'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	test/test_SnippetOptions.py	/^    wanted = '   Expand me!'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	test/test_SnippetOptions.py	/^    wanted = '  Expand me!'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	test/test_SnippetOptions.py	/^    wanted = '  Expand me!'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	test/test_SnippetOptions.py	/^    wanted = '  \\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	test/test_SnippetOptions.py	/^    wanted = '  \\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	test/test_SnippetOptions.py	/^    wanted = ' .a' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	test/test_SnippetOptions.py	/^    wanted = ' self.'$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	test/test_SnippetOptions.py	/^    wanted = '$Expand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	test/test_SnippetOptions.py	/^    wanted = '-Expand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWordSnippet_Simple
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_Expand
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_WithSpace
wanted	test/test_SnippetOptions.py	/^    wanted = '[[Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET
wanted	test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET_SW
wanted	test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_No_TS
wanted	test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_Simple
wanted	test/test_SnippetOptions.py	/^    wanted = '\\t\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	test/test_SnippetOptions.py	/^    wanted = 'a not at beginning'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	test/test_SnippetOptions.py	/^    wanted = 'a not at beginning'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	test/test_SnippetOptions.py	/^    wanted = 'a test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	test/test_SnippetOptions.py	/^    wanted = 'a test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	test/test_SnippetOptions.py	/^    wanted = 'a(Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	test/test_SnippetOptions.py	/^    wanted = 'a-Expand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	test/test_SnippetOptions.py	/^    wanted = 'a-Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	test/test_SnippetOptions.py	/^    wanted = 'a.' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	test/test_SnippetOptions.py	/^    wanted = 'aExpand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	test/test_SnippetOptions.py	/^    wanted = 'aExpand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	test/test_SnippetOptions.py	/^    wanted = 'abc test Expand me!'$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	test/test_SnippetOptions.py	/^    wanted = 'atest it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	test/test_SnippetOptions.py	/^    wanted = 'atest' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	test/test_SnippetOptions.py	/^    wanted = 'self.'$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	test/test_SnippetOptions.py	/^    wanted = 'test No match'$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	test/test_SnippetOptions.py	/^    wanted = 'test fedcab'$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
wanted	test/test_SnippetOptions.py	/^    wanted = 'ßßExpand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	test/test_SnippetPriorities.py	/^    wanted = 'Hallo'$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
wanted	test/test_SnippetPriorities.py	/^    wanted = 'Should only expand in p.\\ntest' + EX$/;"	v	class:SnippetPriorities_ClearedByChild
wanted	test/test_SnippetPriorities.py	/^    wanted = 'This is a test snippet'$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
wanted	test/test_SnippetPriorities.py	/^    wanted = 'This is a test snippet'$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
wanted	test/test_SnippetPriorities.py	/^    wanted = 'We overwrite'$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
wanted	test/test_SnippetPriorities.py	/^    wanted = 'We overwrite'$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
wanted	test/test_SnippetPriorities.py	/^    wanted = 'We overwrite'$/;"	v	class:SnippetPriorities_OverwriteExisting
wanted	test/test_SnippetPriorities.py	/^    wanted = 'We overwrite\\nNo overwrite'$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
wanted	test/test_SnippetPriorities.py	/^    wanted = 'again'$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
wanted	test/test_SnippetPriorities.py	/^    wanted = 'test' + EX$/;"	v	class:SnippetPriorities_ClearedByParent
wanted	test/test_SnippetPriorities.py	/^    wanted = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear
wanted	test/test_SnippetPriorities.py	/^    wanted = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear2
wanted	test/test_TabStop.py	/^        'test try\\nSeem to work World'$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	test/test_TabStop.py	/^    wanted = "Test: blub\\nTrailing texthello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
wanted	test/test_TabStop.py	/^    wanted = "Test: snippet start\\nNested tabstop: hello\\nsnippet end\\nTrailing text"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
wanted	test/test_TabStop.py	/^    wanted = '${1:literal}'$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	test/test_TabStop.py	/^    wanted = ':latex:`Hello`World'$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'Hallo haselnhipsut upsend'$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'Hallo: Hallo '$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	test/test_TabStop.py	/^    wanted = 'This \\\\ is a backslash!'$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	test/test_TabStop.py	/^    wanted = '[ HelloWorld ] Hello'$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = '\\n${1:literal}'$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	test/test_TabStop.py	/^    wanted = 'a${1:literal}'$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	test/test_TabStop.py	/^    wanted = 'each_byte { |byte| Blah }'$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'echo Hallo'$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'hallo Blah Lets replace it again' + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'hallo Blah mitteLets replace it again' + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'hallo Du Nase na'$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'hallo Hi' + 2 * JF + 'du Test'$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'hallo Nase a small feed'$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'hallo Nase a small feed'$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'hallo Test Hi'$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'hallo Test mitte BeginningHi'$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'hallo na Du Nase'$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'hi  Nothing  Nothing world'$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	test/test_TabStop.py	/^    wanted = 'hi Blah Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	test/test_TabStop.py	/^    wanted = 'hi Hallo '$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	test/test_TabStop.py	/^    wanted = 'hi Nothing Nothing world'$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	test/test_TabStop.py	/^    wanted = 'hi Nothing world'$/;"	v	class:TabStop_Multiline_Overwrite
wanted	test/test_TabStop.py	/^    wanted = 'hi first line\\nsecond line first line\\nsecond line world'$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	test/test_TabStop.py	/^    wanted = 'hi first line\\nsecond line world'$/;"	v	class:TabStop_Multiline_Leave
wanted	test/test_TabStop.py	/^    wanted = 'hi this Hallo Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	test/test_TabStop.py	/^    wanted = 'hi this Hallo Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	test/test_TabStop.py	/^    wanted = 'hi this second Hallo Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	test/test_TabStop.py	/^    wanted = 'hi this second second'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	test/test_TabStop.py	/^    wanted = 'hisnip '$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	test/test_TabStop.py	/^    wanted = 'hisnip default'$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	test/test_TabStop.py	/^    wanted = 'hisnip i'$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	test/test_TabStop.py	/^    wanted = 'ia(1, 2) after: 3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
wanted	test/test_TabStop.py	/^    wanted = 'ia(1, 2) after: 3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
wanted	test/test_TabStop.py	/^    wanted = 'nothing ship hups'$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'snip $0 $hi end'$/;"	v	class:TabStop_EscapingCharsDollars
wanted	test/test_TabStop.py	/^    wanted = 'snip ` literal'$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	test/test_TabStop.py	/^    wanted = 'test run'$/;"	v	class:TabStop_Exit_ExpectCorrectResult
wanted	test/test_TabStop.py	/^    wanted = 'tt\\nt{\\n\\tt\\n}'$/;"	v	class:TabStop_CROnlyOnSelectedNear
wanted	test/test_TabStop.py	/^    wanted = 'usage: `basename $0` [ -u -v -d ]'$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	test/test_TabStop.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	test/test_TabStop.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	test/test_TabStop.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	test/test_Transformation.py	/^    wanted = '* test\\n* test\\n* test'$/;"	v	class:Transformation_OptionMultiline_ECR
wanted	test/test_Transformation.py	/^    wanted = 'HALLO hallo'$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'Hallo hallo'$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'SomE tExt SOME TEXT \\nsome text '$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	test/test_Transformation.py	/^    wanted = 'TEST blah'$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	test/test_Transformation.py	/^    wanted = 'a b  c d e f ghhh h oha a b  c d e f ghhh h...'$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	test/test_Transformation.py	/^    wanted = 'a some more text began with an a'$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'a some yes'$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'a, nice,   building a, nice, building'$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	test/test_Transformation.py	/^    wanted = 'a, nice, building a-nice-building'$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	test/test_Transformation.py	/^    wanted = 'aa yes:no)'$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
wanted	test/test_Transformation.py	/^    wanted = 'aa yes\\\\'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
wanted	test/test_Transformation.py	/^    wanted = 'ab no\\\\'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
wanted	test/test_Transformation.py	/^    wanted = 'b some no'$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'dead parrot this parrot is a bit dead'$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'foo boo aoo foo bull aoo'$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'hallo '$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	test/test_Transformation.py	/^    wanted = 'hallo '$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	test/test_Transformation.py	/^    wanted = 'hallo .\\nhallo- >\\nhallo-> '$/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	test/test_Transformation.py	/^    wanted = 'hallo HALLO'$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'hallo Hallo'$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'hallo batzl hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	test/test_Transformation.py	/^    wanted = 'hallo batzl hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'hallo foo boy hallo batzl boy'$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'hallo hallo'$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
wanted	test/test_Transformation.py	/^    wanted = 'hallo is somethingb'$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	test/test_Transformation.py	/^    wanted = 'hallo is somethingmore'$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	test/test_Transformation.py	/^    wanted = 'hallo noAUCH ahiuchauch_end'$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	test/test_Transformation.py	/^    wanted = 'hallo noAUCH auchauchih_end'$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	test/test_Transformation.py	/^    wanted = 'hallo noAUCH hinoauchnoauch_end'$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	test/test_Transformation.py	/^    wanted = 'hallo noAUCH noauchnoauchab_end'$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	test/test_Transformation.py	/^    wanted = 'snip  '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	test/test_Transformation.py	/^    wanted = 'snip  m2  hi'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	test/test_Transformation.py	/^    wanted = 'snip m1  hi '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	test/test_Transformation.py	/^    wanted = 'snip matched hallo'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	test/test_Transformation.py	/^    wanted = 'sometext defined sometext'$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	test/test_Transformation.py	/^    wanted = 'sometext overwrite'$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	test/test_Transformation.py	/^    wanted = 'test, hallo test\\nhallo'$/;"	v	class:Transformation_CINewlines_ECR
wanted	test/test_Transformation.py	/^    wanted = 'test, hallo test\\thallo'$/;"	v	class:Transformation_CITabstop_ECR
wanted	test/test_Transformation.py	/^    wanted = 'test, halul test, ha(ul)'$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	test/test_Transformation.py	/^    wanted = 'éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEUR'$/;"	v	class:Transformation_SimpleCaseAsciiResult
wanted	test/test_Transformation.py	/^    wanted = 'éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieur'$/;"	v	class:Transformation_LowerCaseAsciiResult
wanted	test/test_UltiSnipFunc.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
wanted	test/test_UltiSnipFunc.py	/^    wanted = 'abc simple expand'$/;"	v	class:AddFunc_Simple
wanted	test/test_UltiSnipFunc.py	/^    wanted = 'simple expand'$/;"	v	class:AddFunc_Opt
wanted	test/test_UltiSnipFunc.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
wanted	test/test_UltiSnipFunc.py	/^    wanted = 'test41123\\'êabc0'$/;"	v	class:VerifyVimDict1
wanted	test/test_UltiSnipFunc.py	/^    wanted = ($/;"	v	class:AddNewSnippetSource
wanted	test/test_Visual.py	/^    wanted = '\\tbhlablbub'$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	test/test_Visual.py	/^    wanted = 'beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend'$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	test/test_Visual.py	/^    wanted = 'beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone'$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	test/test_Visual.py	/^    wanted = 'beg\\n\\thello\\n\\tnice\\n\\tworld\\nend'$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	test/test_Visual.py	/^    wanted = 'beg\\n\\thello\\n\\tnice\\n\\tworld\\nend'$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	test/test_Visual.py	/^    wanted = 'bhlablubb'$/;"	v	class:Visual_SelectOneWord_Inword
wanted	test/test_Visual.py	/^    wanted = 'bla hblub\\n  hellobi'$/;"	v	class:Visual_CrossOneLine
wanted	test/test_Visual.py	/^    wanted = 'hBLABLUBb'$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	test/test_Visual.py	/^    wanted = 'hBLABLUBb'$/;"	v	class:VisualTransformation_SelectOneWord
wanted	test/test_Visual.py	/^    wanted = 'hHELLO\\n NICE\\n WORLDb'$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	test/test_Visual.py	/^    wanted = 'hWORLDbhi'$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	test/test_Visual.py	/^    wanted = 'h\/\/ bodybhi'$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	test/test_Visual.py	/^    wanted = 'hbabc'$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	test/test_Visual.py	/^    wanted = 'hbefHELLO\\n    NICE\\n    WORLDaftbhi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	test/test_Visual.py	/^    wanted = 'hbefhello\\n    nice\\n    worldaftbhi'$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	test/test_Visual.py	/^    wanted = 'hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	test/test_Visual.py	/^    wanted = 'hbeforeahello\\n\\tnice\\n\\tworldaftbhi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	test/test_Visual.py	/^    wanted = 'hblablub\\nb'$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	test/test_Visual.py	/^    wanted = 'hblablubb'$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	test/test_Visual.py	/^    wanted = 'hblablubb'$/;"	v	class:Visual_SelectOneWord
wanted	test/test_Visual.py	/^    wanted = 'hblablubb\\nhb'$/;"	v	class:Visual_ExpandTwice
wanted	test/test_Visual.py	/^    wanted = 'hblablubbblabluba'$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	test/test_Visual.py	/^    wanted = 'hblablubbhello'$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	test/test_Visual.py	/^    wanted = 'hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi'$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	test/test_Visual.py	/^    wanted = 'hhello\\n nice\\n worldb'$/;"	v	class:Visual_LineSelect_Simple
wanted	test/test_Visual.py	/^    wanted = 'hhellob'$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	test/test_Visual.py	/^    wanted = 'hjupbhi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	test/test_Visual.py	/^    wanted = 'hjupbhi'$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	test/test_Visual.py	/^    wanted = 'hnblablub\\nmmmbdone'$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	test/test_Visual.py	/^    wanted = 'hupsbhi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	test/test_Visual.py	/^    wanted = 'hworldbhi'$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	test/test_Visual.py	/^    wanted = 'if {\\n\\tif {\\n\\t\\tone\\n\\t\\ttwo\\n\\t}\\n\\tthree\\n}'$/;"	v	class:Visual_LineSelect_DedentLine
wanted	test/test_Visual.py	/^    wanted = 'xxxhyyybyxxx'$/;"	v	class:Visual_SelectOneWordExclusive
wanted	test/test_Visual.py	/^    wanted = 'xxxhyyyybxxx'$/;"	v	class:Visual_SelectOneWordInclusive
wanted	test/vim_test_case.py	/^    wanted = ''$/;"	v	class:VimTestCase
wrap	pythonx/UltiSnips/err_to_scratch_buffer.py	/^def wrap(func):$/;"	f
wrapper	pythonx/UltiSnips/err_to_scratch_buffer.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:wrap
write_snippets	utils/get_tm_snippets.py	/^def write_snippets(snip_descr, f):$/;"	f
write_temp	test/vim_interface.py	/^    def write_temp(self, file_path, content):$/;"	m	class:TempFileManager
